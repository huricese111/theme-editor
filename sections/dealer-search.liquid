{% assign display_map = false %}
{%- assign first_map_address = '' -%}
{%- for block in section.blocks -%}
  {%- if block.type == 'location' and block.settings.map_address != blank -%}
    {%- if first_map_address == blank -%}
      {%- assign first_map_address = block.settings.map_address -%}
    {%- endif -%}
  {%- endif -%}
{%- endfor -%}
{%- if section.settings.api_key != blank and first_map_address != blank -%}
  {% assign display_map = true %}
  <script src="{{ 'location-map.js' | asset_url }}" defer></script>
{%- endif -%}

{%- comment -%} Multi-language section title {%- endcomment -%}
{%- assign section_title = section.settings.section_title_en -%}
{%- case request.locale.iso_code -%}
  {%- when 'de' -%}
    {%- assign section_title = section.settings.section_title_de -%}
  {%- when 'fr' -%}
    {%- assign section_title = section.settings.section_title_fr -%}
  {%- when 'fi' -%}
    {%- assign section_title = section.settings.section_title_fi -%}
  {%- else -%}
    {%- assign section_title = section.settings.section_title_en -%}
{%- endcase -%}

{%- comment -%} Multi-language direction button text {%- endcomment -%}
{%- assign direction_text = 'Directions' -%}
{%- case request.locale.iso_code -%}
  {%- when 'de' -%}
    {%- assign direction_text = 'Wegbeschreibung' -%}
  {%- when 'fr' -%}
    {%- assign direction_text = 'Itin√©raire' -%}
  {%- when 'fi' -%}
    {%- assign direction_text = 'Reittiohjeet' -%}
  {%- else -%}
    {%- assign direction_text = 'Directions' -%}
{%- endcase -%}

<div
  class="section-id-{{ section.id }} map-section use-color-scheme use-color-scheme--{{ section.settings.color_scheme }}{% unless section.settings.full_width %} map-section--map-constrained{% endunless %}{% if display_map %} map-section--display-map{% endif %}"
  {%- render 'animation-attrs', attrs: 'data-cc-animate' -%}
>
  <div class="container">
    <div class="map-section__wrapper">
      <div class="map-section__locations">
        <!-- Section Title -->
        {% if section_title != blank %}
          <h2 class="dealer-search__title">{{ section_title }}</h2>
        {% endif %}
        
        <!-- Search Form -->
        <div class="dealer-search__form">
          <div class="search-input-group">
            <input type="text" id="location-search" placeholder="Find sites near this location" class="search-input">
            <div class="search-controls">
              <div class="search-control">
                <label for="distance-select">Distance</label>
                <select id="distance-select" class="search-select">
                  <option value="25">25 KM</option>
                  <option value="50">50 KM</option>
                  <option value="100">100 KM</option>
                  <option value="200">200 KM</option>
                </select>
              </div>
              <div class="search-control">
                <label for="results-select">Results</label>
                <select id="results-select" class="search-select">
                  <option value="25">25</option>
                  <option value="50">50</option>
                  <option value="100">100</option>
                  <option value="all">All</option>
                </select>
              </div>
              <button type="button" id="search-btn" class="search-button">Search</button>
            </div>
          </div>
          
          <!-- Search Filters -->
          <div class="search-filters">
            <h4 class="search-filters__title">Search Filters</h4>
            <div class="filter-options">
              <label class="filter-option">
                <input type="checkbox" id="filter-click-collect" value="click-collect">
                <span>Click and Collect</span>
              </label>
              <label class="filter-option">
                <input type="checkbox" id="filter-dealer" value="dealer">
                <span>Dealer</span>
              </label>
              <label class="filter-option">
                <input type="checkbox" id="filter-rental" value="rental">
                <span>Rental Station</span>
              </label>
              <label class="filter-option">
                <input type="checkbox" id="filter-service" value="service">
                <span>Service Center</span>
              </label>
            </div>
          </div>
        </div>
        
        <!-- Location Results -->
        <div class="location-results" id="location-results">
          {%- for block in section.blocks -%}
            {%- case block.type -%}
              {%- when 'location' -%}
                <div class="map-section__content map-section__text location-card" 
                     data-map-address="{{ block.settings.map_address | escape }}"
                     data-block-id="{{ block.id }}"
                     data-store-name="{{ block.settings.store_name | escape }}"
                     data-address="{{ block.settings.address | escape }}"
                     data-city="{{ block.settings.city | escape }}"
                     data-country="{{ block.settings.country | escape }}"
                     data-postal-code="{{ block.settings.postal_code | escape }}"
                     data-phone="{{ block.settings.phone | escape }}"
                     data-email="{{ block.settings.email | escape }}"
                     data-website="{{ block.settings.website | escape }}"
                     data-hours="{{ block.settings.hours_of_operation | escape }}"
                     data-store-group="{{ block.settings.store_group | escape }}"
                     data-province="{{ block.settings.province_state | escape }}"
                     data-address2="{{ block.settings.address2 | escape }}"
                     data-fax="{{ block.settings.fax | escape }}"
                     data-store-type="{{ block.settings.store_type | escape }}"
                     {{ block.shopify_attributes }}>
                  
                  {% if block.settings.store_name != blank %}
                    <h3 class="location-card__title">{{ block.settings.store_name | escape }}</h3>
                  {% endif %}
                  
                  {% if block.settings.address != blank %}
                    <div class="location-card__address">
                      {{ block.settings.address | escape }}
                      {% if block.settings.city != blank %}, {{ block.settings.city | escape }}{% endif %}
                      {% if block.settings.postal_code != blank %} {{ block.settings.postal_code | escape }}{% endif %}
                    </div>
                  {% endif %}
                  
                  {% if block.settings.phone != blank %}
                    <div class="location-card__phone">
                      <strong>Phone:</strong> {{ block.settings.phone | escape }}
                    </div>
                  {% endif %}
                  
                  {% if block.settings.email != blank %}
                    <div class="location-card__email">
                      <strong>Email:</strong> {{ block.settings.email | escape }}
                    </div>
                  {% endif %}
                  
                  {% if block.settings.map_address != blank %}
                    <div class="location-card__direction">
                      <a
                        href="https://maps.google.com?daddr={{ block.settings.map_address | escape }}"
                        target="_blank"
                        class="btn btn--secondary direction-btn"
                      >
                        {% if block.settings.show_pin %}
                          <span class="icon">{% render 'icon-location' %}</span>
                        {% endif %}
                        <span>{{ direction_text }}</span>
                      </a>
                    </div>
                  {% endif %}
                </div>
            {%- endcase -%}
          {%- endfor -%}
        </div>
      </div>

      <div class="map-section__content map-section__map">
        {%- if display_map -%}
          <div id="map-container" data-api-key="{{ section.settings.api_key }}" data-map-type="{{ section.settings.map_type }}" data-map-style="{{ section.settings.map_style }}">
            {%- if section.settings.map_type == 'dynamic' -%}
              {% render 'location-map',
                api_key: section.settings.api_key,
                address: first_map_address,
                map_style: section.settings.map_style
              %}
            {%- else -%}
              <iframe
                id="map-iframe"
                class="map"
                src="https://www.google.com/maps/embed/v1/place?key={{ section.settings.api_key }}&q={{ first_map_address }}&zoom=14"
                width="100%"
                height="100%"
                frameborder="0"
                style="border:0"
                referrerpolicy="no-referrer-when-downgrade"
                allowfullscreen
              ></iframe>
            {%- endif -%}
          </div>
        {%- endif -%}
      </div>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const locationCards = document.querySelectorAll('.location-card');
    const mapContainer = document.getElementById('map-container');
    const mapIframe = document.getElementById('map-iframe');
    const searchBtn = document.getElementById('search-btn');
    const locationSearch = document.getElementById('location-search');
    const distanceSelect = document.getElementById('distance-select');
    const resultsSelect = document.getElementById('results-select');
    const locationResults = document.getElementById('location-results');
    const filterCheckboxes = document.querySelectorAll('.filter-option input[type="checkbox"]');
    
    let allLocations = Array.from(locationCards);
    let filteredLocations = [...allLocations];
    
    if (!mapContainer) return;
    
    const apiKey = mapContainer.dataset.apiKey;
    const mapType = mapContainer.dataset.mapType;
    const mapStyle = mapContainer.dataset.mapStyle;
    
    // Search functionality
    function performSearch() {
      const searchTerm = locationSearch.value.toLowerCase().trim();
      const selectedFilters = Array.from(filterCheckboxes)
        .filter(cb => cb.checked)
        .map(cb => cb.value);
      
      filteredLocations = allLocations.filter(card => {
        // Text search
        const storeName = card.getAttribute('data-store-name').toLowerCase();
        const address = card.getAttribute('data-address').toLowerCase();
        const city = card.getAttribute('data-city').toLowerCase();
        const country = card.getAttribute('data-country').toLowerCase();
        
        const matchesSearch = !searchTerm || 
          storeName.includes(searchTerm) || 
          address.includes(searchTerm) || 
          city.includes(searchTerm) || 
          country.includes(searchTerm);
        
        // Filter search
        const storeType = card.getAttribute('data-store-type') || '';
        const matchesFilter = selectedFilters.length === 0 || 
          selectedFilters.some(filter => storeType.includes(filter));
        
        return matchesSearch && matchesFilter;
      });
      
      displayResults();
    }
    
    function displayResults() {
      // Hide all cards first
      allLocations.forEach(card => {
        card.style.display = 'none';
      });
      
      // Show filtered results
      const maxResults = resultsSelect.value === 'all' ? filteredLocations.length : parseInt(resultsSelect.value);
      const cardsToShow = filteredLocations.slice(0, maxResults);
      
      cardsToShow.forEach(card => {
        card.style.display = 'block';
      });
      
      // Set first visible card as active
      allLocations.forEach(card => card.classList.remove('active'));
      if (cardsToShow.length > 0) {
        cardsToShow[0].classList.add('active');
        updateMapForCard(cardsToShow[0]);
      }
    }
    
    function clearSearch() {
      locationSearch.value = '';
      filterCheckboxes.forEach(cb => cb.checked = false);
      filteredLocations = [...allLocations];
      displayResults();
    }
    
    function updateMapForCard(card) {
      const mapAddress = card.getAttribute('data-map-address');
      if (!mapAddress) return;
      
      const infoContent = createInfoWindowContent(card);
      
      if (mapType === 'dynamic') {
        if (window.updateDynamicMap) {
          window.updateDynamicMap(mapAddress);
          setTimeout(() => {
            if (window.updateInfoWindow) {
              window.updateInfoWindow(infoContent);
            }
          }, 500);
        }
      } else {
        if (mapIframe) {
          mapIframe.src = `https://www.google.com/maps/embed/v1/place?key=${apiKey}&q=${encodeURIComponent(mapAddress)}&zoom=14`;
        }
      }
    }
    
    // Event listeners
    searchBtn.addEventListener('click', performSearch);
    
    locationSearch.addEventListener('keypress', function(e) {
      if (e.key === 'Enter') {
        performSearch();
      }
    });
    
    filterCheckboxes.forEach(checkbox => {
      checkbox.addEventListener('change', performSearch);
    });
    
    resultsSelect.addEventListener('change', displayResults);
    
    // Clear search when input is empty
    locationSearch.addEventListener('input', function() {
      if (this.value === '') {
        clearSearch();
      }
    });
    
    locationCards.forEach(function(card) {
      card.addEventListener('click', function() {
        locationCards.forEach(c => c.classList.remove('active'));
        this.classList.add('active');
        updateMapForCard(this);
      });
    });
    
    // Initialize
    displayResults();
    
    // Function to create info window content
    function createInfoWindowContent(card) {
      // Ê≠£Á°ÆÁöÑdataÂ±ûÊÄßËÆøÈóÆÊñπÂºè
      const storeName = card.getAttribute('data-store-name') || '';
      const address = card.getAttribute('data-address') || '';
      const city = card.getAttribute('data-city') || '';
      const country = card.getAttribute('data-country') || '';
      const postalCode = card.getAttribute('data-postal-code') || '';
      const phone = card.getAttribute('data-phone') || '';
      const email = card.getAttribute('data-email') || '';
      const website = card.getAttribute('data-website') || '';
      const hours = card.getAttribute('data-hours') || '';
      const storeGroup = card.getAttribute('data-store-group') || '';
      const province = card.getAttribute('data-province') || '';
      const address2 = card.getAttribute('data-address2') || '';
      const fax = card.getAttribute('data-fax') || '';
      
      let content = `<div class="info-window">`;
      
      if (storeName) {
        content += `<h4>${storeName}</h4>`;
      }
      
      if (address || city || postalCode) {
        content += `<p><strong>Address:</strong><br>`;
        if (address) content += `${address}<br>`;
        if (address2) content += `${address2}<br>`;
        if (city) content += `${city} `;
        if (postalCode) content += `${postalCode}<br>`;
        if (province) content += `${province}<br>`;
        if (country) content += `${country}`;
        content += `</p>`;
      }
      
      if (phone) {
        content += `<p><strong>Phone:</strong> ${phone}</p>`;
      }
      
      if (fax) {
        content += `<p><strong>Fax:</strong> ${fax}</p>`;
      }
      
      if (email) {
        content += `<p><strong>Email:</strong> ${email}</p>`;
      }
      
      if (website) {
        content += `<p><strong>Website:</strong> <a href="${website}" target="_blank">${website}</a></p>`;
      }
      
      if (storeGroup) {
        content += `<p><strong>Store Group:</strong> ${storeGroup}</p>`;
      }
      
      if (hours) {
        content += `<p><strong>Hours:</strong><br>${hours.replace(/\n/g, '<br>')}</p>`;
      }
      
      content += `</div>`;
      
      return content;
    }
  });
</script>

<style>
  .map-section {
    min-height: 100vh;
    display: flex;
    align-items: stretch;
  }
  
  .map-section .container {
    width: 100%;
    height: 100vh;
    max-width: none;
    padding: 0;
    margin: 0;
  }
  
  .map-section__wrapper {
    display: grid;
    grid-template-columns: 3fr 7fr;
    height: 100vh;
    gap: 0;
    position: relative;
  }
  
  .map-section__locations {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    padding: 2rem;
    overflow-y: auto;
    background-color: #f8f9fa;
    min-width: 300px;
    position: relative;
    z-index: 10;
    max-height: 100vh;
  }
  
  /* New styles for search functionality */
  .dealer-search__title {
    margin: 0 0 1.5rem 0;
    font-size: 1.5rem;
    font-weight: bold;
    color: #333;
  }
  
  .dealer-search__form {
    margin-bottom: 1.5rem;
    padding-bottom: 1.5rem;
    border-bottom: 1px solid #ddd;
  }
  
  .search-input-group {
    margin-bottom: 1rem;
  }
  
  .search-input {
    width: 100%;
    padding: 0.75rem;
    border: 1px solid #ddd;
    border-radius: 4px;
    font-size: 0.9rem;
    margin-bottom: 1rem;
  }
  
  .search-controls {
    display: flex;
    gap: 0.5rem;
    align-items: end;
    flex-wrap: wrap;
  }
  
  .search-control {
    display: flex;
    flex-direction: column;
    gap: 0.25rem;
  }
  
  .search-control label {
    font-size: 0.8rem;
    color: #666;
    font-weight: 500;
  }
  
  .search-select {
    padding: 0.5rem;
    border: 1px solid #ddd;
    border-radius: 4px;
    font-size: 0.8rem;
    min-width: 70px;
  }
  
  .search-button {
    padding: 0.5rem 1rem;
    background-color: #000;
    color: white;
    border: none;
    border-radius: 4px;
    font-size: 0.8rem;
    cursor: pointer;
    transition: background-color 0.3s ease;
  }
  
  .search-button:hover {
    background-color: #333;
  }
  
  .search-filters {
    margin-top: 1rem;
  }
  
  .search-filters__title {
    margin: 0 0 0.75rem 0;
    font-size: 1rem;
    font-weight: 600;
    color: #333;
  }
  
  .filter-options {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }
  
  .filter-option {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    font-size: 0.9rem;
    cursor: pointer;
  }
  
  .filter-option input[type="checkbox"] {
    margin: 0;
  }
  
  .location-results {
    flex: 1;
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }
  
  .location-card {
    cursor: pointer;
    padding: 1.5rem;
    border: 2px solid transparent;
    border-radius: 8px;
    transition: all 0.3s ease;
    width: 100%;
    box-sizing: border-box;
    background-color: white;
    min-height: 120px;
    position: relative;
    z-index: 11;
    flex-shrink: 0; 
  }
  
  .location-card:hover {
    border-color: #ccc;
    box-shadow: 0 2px 8px rgba(0,0,0,0.1);
  }
  
  .location-card.active {
    border-color: #007bff;
    background-color: rgba(0, 123, 255, 0.1);
  }
  
  .location-card__title {
    margin: 0 0 0.5rem 0;
    font-size: 1.2rem;
    font-weight: bold;
    color: #333;
  }
  
  .location-card__address,
  .location-card__phone,
  .location-card__email {
    margin: 0.5rem 0;
    font-size: 0.9rem;
    color: #666;
  }
  
  .location-card__direction {
    margin-top: 1rem;
  }
  
  .direction-btn {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.5rem 1rem;
    background-color: #007bff;
    color: white;
    text-decoration: none;
    border-radius: 4px;
    font-size: 0.9rem;
    transition: background-color 0.3s ease;
    border:none;
  }
  
  .direction-btn:hover {
    background-color: #0056b3;
  }
  
  .map-section__map {
    width: 100%;
    height: 100vh;
    padding: 0;
    margin: 0;
    position: relative;
    z-index: 1;
  }
  
  #map-container {
    width: 100%;
    height: 100%;
    border: none;
    border-radius: 0;
    position: relative;
  }
  
  #map-iframe,
  .map {
    width: 100% !important;
    height: 100% !important;
    border: none;
    display: block;
    position: relative;
  }
  
  .info-window {
    max-width: 300px;
    font-family: Arial, sans-serif;
  }
  
  .info-window h4 {
    margin: 0 0 10px 0;
    color: #333;
    font-size: 16px;
  }
  
  .info-window p {
    margin: 5px 0;
    font-size: 14px;
    line-height: 1.4;
  }
  
  .info-window a {
    color: #007bff;
    text-decoration: none;
  }
  
  .info-window a:hover {
    text-decoration: underline;
  }
  
  @media (max-width: 768px) {
    .map-section__wrapper {
      grid-template-columns: 1fr;
      grid-template-rows: 50vh 50vh;
    }
    
    .map-section__locations {
      order: 2;
      min-width: auto;
      max-height: 50vh;
    }
    
    .map-section__map {
      order: 1;
      height: 50vh;
    }
    
    .search-controls {
      flex-direction: column;
      align-items: stretch;
    }
    
    .search-control {
      width: 100%;
    }
    
    .search-select {
      width: 100%;
      min-width: auto;
    }
  }
</style>

{% schema %}
{
  "name": "Find a dealer",
  "class": "section-map",
  "disabled_on": {
    "groups": ["aside"]
  },
  "settings": [
    {
      "type": "header",
      "content": "Section Title"
    },
    {
      "type": "text",
      "id": "section_title_en",
      "label": "Section Title (English)",
      "default": "Dealer Search"
    },
    {
      "type": "text",
      "id": "section_title_de",
      "label": "Section Title (German)",
      "default": "H√§ndlersuche"
    },
    {
      "type": "text",
      "id": "section_title_fr",
      "label": "Section Title (French)",
      "default": "Recherche de Revendeur"
    },
    {
      "type": "text",
      "id": "section_title_fi",
      "label": "Section Title (Finnish)",
      "default": "J√§lleenmyyj√§haku"
    },
    {
      "id": "full_width",
      "type": "checkbox",
      "label": "Full page width",
      "default": true
    },
    {
      "type": "select",
      "id": "color_scheme",
      "label": "Color scheme",
      "default": "1",
      "options": [
        {
          "value": "default",
          "label": "Default"
        },
        {
          "value": "1",
          "label": "1"
        },
        {
          "value": "2",
          "label": "2"
        }
      ]
    },
    {
      "type": "header",
      "content": "Map"
    },
    {
      "id": "api_key",
      "type": "text",
      "label": "Google Maps API key",
      "default": "AIzaSyBo8kZy19ByPFrx0XR0jrTR5Z6PO5mlaCU",
      "info": "You'll need to [register a Google Maps API Key](https://help.shopify.com/manual/using-themes/troubleshooting/map-section-api-key) to display the map"
    },
    {
      "type": "select",
      "id": "map_type",
      "label": "Map type",
      "info": "The type of map to add. [Learn more](https://mapsplatform.google.com/maps-products/#maps)",
      "options": [
        {
          "value": "dynamic",
          "label": "Dynamic"
        },
        {
          "value": "embed",
          "label": "Embed (free)"
        }
      ],
      "default": "embed"
    },
    {
      "type": "select",
      "id": "map_style",
      "label": "Map style",
      "info": "Dynamic map only",
      "default": "silver",
      "options": [
        {
          "label": "Default",
          "value": "default"
        },
        {
          "label": "Silver",
          "value": "silver"
        },
        {
          "label": "Retro",
          "value": "retro"
        },
        {
          "label": "Dark",
          "value": "dark"
        },
        {
          "label": "Night",
          "value": "night"
        },
        {
          "label": "Aubergine",
          "value": "aubergine"
        }
      ]
    }
  ],
  "blocks": [
    {
      "type": "location",
      "name": "Location",
      "settings": [
        {
          "type": "header",
          "content": "Basic Details"
        },
        {
          "type": "text",
          "id": "store_name",
          "label": "Store Name",
          "default": "Sportshop Bittner"
        },
        {
          "type": "text",
          "id": "address",
          "label": "Address",
          "default": "Wei√üestr. 26"
        },
        {
          "type": "text",
          "id": "city",
          "label": "City",
          "default": "Leipzig"
        },
        {
          "type": "text",
          "id": "country",
          "label": "Country",
          "default": "Germany"
        },
        {
          "type": "text",
          "id": "postal_code",
          "label": "Postal/Zip Code",
          "default": "4299"
        },
        {
          "type": "header",
          "content": "Additional details"
        },
        {
          "type": "text",
          "id": "store_group",
          "label": "Store Group",
          "default": "Default"
        },
        {
          "type": "select",
          "id": "store_type",
          "label": "Store Type",
          "options": [
            {
              "value": "dealer",
              "label": "Dealer"
            },
            {
              "value": "click-collect",
              "label": "Click and Collect"
            },
            {
              "value": "rental",
              "label": "Rental Station"
            },
            {
              "value": "service",
              "label": "Service Center"
            }
          ],
          "default": "dealer"
        },
        {
          "type": "text",
          "id": "address2",
          "label": "Address 2"
        },
        {
          "type": "text",
          "id": "province_state",
          "label": "Province/State",
          "default": "Sachsen"
        },
        {
          "type": "header",
          "content": "Contact information"
        },
        {
          "type": "text",
          "id": "phone",
          "label": "Phone",
          "default": "+49 (0)341 59097850"
        },
        {
          "type": "text",
          "id": "fax",
          "label": "Fax"
        },
        {
          "type": "text",
          "id": "email",
          "label": "Email",
          "default": "steffen@sportshop-bittner.de"
        },
        {
          "type": "text",
          "id": "website",
          "label": "Website",
          "default": "https://sportshop-bittner.de/"
        },
        {
          "type": "header",
          "content": "Hours of operation"
        },
        {
          "type": "textarea",
          "id": "hours_of_operation",
          "label": "Hours of Operations",
          "default": "Monday - Friday 10:00 - 18:00\nThursday 10:00 - 19:00\nSaturday 09:00 - 13:00"
        },
        {
          "type": "header",
          "content": "Map Settings"
        },
        {
          "id": "map_address",
          "type": "text",
          "label": "Map address",
          "info": "Google Maps will find the exact location",
          "default": "Wei√üestr. 26, Leipzig, Germany"
        },
        {
          "id": "show_pin",
          "type": "checkbox",
          "label": "Show pin",
          "default": true
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Find a dealer",
      "blocks": [
        {
          "type": "location"
        }
      ]
    }
  ]
}
{% endschema %}