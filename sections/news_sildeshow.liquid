<div class="carousel-wrapper">
  <div class="highlightcarouselcontain2">
    <h2 class="explore-title" id="highlights" style="margin-bottom: 20px;">{{ 'ebike.news_storys' | t }}</h2>
  </div>
  <div class="highlightcarouselcontain">
    <div class="highlight-arrow left" onclick="moveLeft()">
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512" fill="white" width="20px" height="auto">
        <path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="48" d="M328 112L184 256l144 144"></path>
      </svg>
    </div>
    <div class="highlight-arrow right" onclick="moveRight()">
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512" fill="white" width="20px" height="auto">
        <path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="48" d="M184 112l144 144-144 144"></path>
      </svg>
    </div>
    <div class="highlightcarousel">
      <div class="highlightcarousel-inner" id="highlightCarouselInner">
        {% for slide in section.blocks %}
        <div class="highlightitem">
          <a href="{{ slide.settings.link }}">
            <img src="{{ slide.settings.image | img_url: 'original' }}" alt="{{ slide.settings.title }}">
            <h5 data-localize="{{ slide.settings.title }}" style="color:#333333;-webkit-line-clamp: 2; text-overflow: ellipsis; overflow: hidden; display: -webkit-box; -webkit-box-orient: vertical;">
              {% case request.locale.iso_code %}
                {% when 'de' %}
                  {{ slide.settings.title_de }}
                {% when 'fr' %}
                  {{ slide.settings.title_fr }}
                {% when 'fi' %}
                  {{ slide.settings.title_fi }}
                {% else %}
                  {{ slide.settings.title }}
              {% endcase %}
            </h5>
            <p data-localize="{{ slide.settings.description }}" style="color:#333333;-webkit-line-clamp: 2; text-overflow: ellipsis; overflow: hidden; display: -webkit-box; -webkit-box-orient: vertical;">
              {% case request.locale.iso_code %}
                {% when 'de' %}
                  {{ slide.settings.description_de }}
                  {% if slide.settings.description_richtext_de != blank %}
                    <p style="color:#333333;">{{ slide.settings.description_richtext_de }}</p>
                  {% endif %}
                {% when 'fr' %}
                  {{ slide.settings.description_fr }}
                  {% if slide.settings.description_richtext_fr != blank %}
                    <p style="color:#333333;">{{ slide.settings.description_richtext_fr }}</p>
                  {% endif %}
                {% when 'fi' %}
                  {{ slide.settings.description_fi }}
                  {% if slide.settings.description_richtext_fi != blank %}
                    <p style="color:#333333;">{{ slide.settings.description_richtext_fi }}</p>
                  {% endif %}
                {% else %}
                  {{ slide.settings.description }}
                  {% if slide.settings.description_richtext != blank %}
                    <p style="color:#333333;">{{ slide.settings.description_richtext }}</p>
                  {% endif %}
              {% endcase %}
            </p>
            <a href="{{ slide.settings.link }}" class="orderbutton">{{ 'ebike.learn_more' | t }}</a>
          </a>
        </div>
        {% endfor %}
      </div>
    </div>
  </div>
</div>


<!-- Lightbox HTML -->
<div id="lightbox" class="lightbox" onclick="closeLightbox()">
    <span class="close">&times;</span>
    <img class="lightbox-content" id="lightboxImg">
</div>

{% schema %}
{
    "name": "News Slideshow",
    "settings": [],
    "blocks": [
        {
            "type": "customslide",
            "name": "Custom Slide",
            "settings": [
                {
                    "type": "image_picker",
                    "id": "image",
                    "label": "Image"
                },
                {
                    "type": "text",
                    "id": "title",
                    "label": "Title",
                },
                {
                    "type": "text",
                    "id": "title_de",
                    "label": "Title (German)",
                },
                {
                    "type": "text",
                    "id": "title_fr",
                    "label": "Title (French)",
                },
                {
                    "type": "text",
                    "id": "title_fi",
                    "label": "Title (Finland)",
                },
                {
                    "type": "textarea",
                    "id": "description",
                    "label": "Description",
                    "default": "Nouvelles & Histoires"
                },
                {
                    "type": "textarea",
                    "id": "description_de",
                    "label": "Description (German)",
                    "default": "Standardbeschreibung."
                },
                {
                    "type": "textarea",
                    "id": "description_fr",
                    "label": "Description (French)",
                    "default": "Texte de description par défaut."
                },
                {
                    "type": "textarea",
                    "id": "description_fi",
                    "label": "Description (Finland)",
                },
              {
                    "type": "richtext",
                    "id": "description_richtext",
                    "label": "Description_richtext",
                },
                {
                    "type": "richtext",
                    "id": "description_richtext_de",
                    "label": "Description_richtext(German)",
                },
                {
                    "type": "richtext",
                    "id": "description_richtext_fr",
                    "label": "Description_richtext(French)",
                },
                   {
                    "type": "richtext",
                    "id": "description_richtext_fi",
                    "label": "Description_richtext(Finland)",
                },
              {
                "type": "url",
                "id": "link",
                "label": "Link"
              }        
            ]
        }
    ],
    "presets": [
        {
            "name": "News Slideshow",
            "category": "Custom"
        }
    ]
}
{% endschema %}



<style>
    .carousel-wrapper {
        position: relative;
        margin-bottom: 50px;
        margin-top: 60px;
    }

    .highlightcarouselcontain {
      overflow: hidden;
      width: 1400px;
      margin: 0 auto;
      position: relative;
    }

  .highlightcarouselcontain2 {
      overflow: hidden;
      width: 1400px;
      margin: 0 auto;
      position: relative;
    }

    .highlightcarousel {
        overflow: auto;
        position: relative;
        width: 100%;
        height: 100%;
    }

    .highlightcarousel::-webkit-scrollbar {
        display: none;
    }

    .highlightcarousel {
        -ms-overflow-style: none;
        scrollbar-width: none;
    }



    .highlightcarousel-inner {
        display: flex;
        transition: transform 0.3s ease;
        height: 100%;
    }


    .highlightitem {
        flex: 0 0 33%;
        box-sizing: border-box;
        padding: 10px;
        border-radius: 5px;
        margin-right: 10px;
        text-align: left;
        height: 100%;
    }

    .explore-title {
        font-size: 30px;
        margin-bottom: 20px;
        text-align: left;
    }

    .highlightitem img {
        max-width: 100%;
        height: auto;
        border-radius: 5px;
    }

    .highlightitem h3 {
        margin-top: 10px;
    }

    .highlight-arrow {
        position: absolute;
        top: 50%;
        transform: translateY(-50%);
        background: black;
        color: white;
        width: 60px;
        height: 60px;
        border-radius: 50%;
        cursor: pointer;
        z-index: 100;
        display: flex;
        align-items: center;
        justify-content: center;
        opacity:.8;
    }

    .highlight-arrow.left {
        left: 10px;
    }

    .highlight-arrow.right {
        right: 10px;
    }

    .lightbox {
        display: none; 
        position: fixed;
        z-index: 1000;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.8);
        justify-content: center;
        align-items: center;
    }

    .lightbox-content {
        max-width: 90%;
        max-height: 90%;
        background: #fff;
    }

    .close {
        position: absolute;
        top: 20px;
        right: 35px;
        color: white;
        font-size: 40px;
        font-weight: bold;
        cursor: pointer;
    }

  h5, .h5 {
    margin: 10px 0;
}
  .highlightitem p{
    color:#333333;
  }

    .orderbutton {
        display: inline-block;
        padding: 10px 20px;
        background-color: white;
        color: black;
        text-decoration: none;
        border-radius: 50px;
        margin-top: 10px;
        border: 1px solid black;
    }

    .orderbutton:hover {
        background-color: black;
        color: white;
    }

    @media (max-width: 768px) {
        .highlightcarouselcontain {
            margin-left: 20px;
           overflow: hidden;
        position: relative;
        width: 100% !important;
        height: 100%;
        }

       .highlightcarouselcontain2 {
            margin-left: 20px;
           overflow: hidden;
        position: relative;
        width: 100% !important;
        height: 100%;
        }

        .highlightitem {
            flex: 0 0 300px;
            margin-right: 0;
        }

        .highlight-arrow {
            display: none;
        }
    }
</style>

<script>
    let currentIndexHighlight = 0; // 使用不同的索引变量
    let startXHighlight = 0;
    let isDraggingHighlight = false;

    const carouselContainer = document.querySelector('.highlightcarousel');
    const carouselInner = document.getElementById('highlightCarouselInner');
    const itemsHighlight = carouselInner.children;
    let itemWidthHighlight = window.innerWidth < 768 ? 300 : (window.innerWidth / 4 + 10);
    const maxIndexHighlight = itemsHighlight.length - 1;

    function updateCarousel() {
        carouselContainer.scrollLeft = currentIndexHighlight * itemWidthHighlight;
    }

    function moveLeft() {
        if (currentIndexHighlight > 0) {
            currentIndexHighlight--;
            updateCarousel();
        }
    }

    function moveRight() {
        if (currentIndexHighlight < maxIndexHighlight) {
            currentIndexHighlight++;
            updateCarousel();
        }
    }

    function openLightbox(imageSrc) {
        const lightbox = document.getElementById('lightbox');
        const lightboxImg = document.getElementById('lightboxImg');
        lightboxImg.src = imageSrc;
        lightbox.style.display = 'flex'; // Show lightbox
    }

    function closeLightbox() {
        const lightbox = document.getElementById('lightbox');
        lightbox.style.display = 'none'; // Hide lightbox
    }

    // Touch event handlers
    carouselContainer.addEventListener('touchstart', (event) => {
        startXHighlight = event.touches[0].clientX;
        isDraggingHighlight = true;
    });

    carouselContainer.addEventListener('touchmove', (event) => {
        if (!isDraggingHighlight) return;
        const currentX = event.touches[0].clientX;
        const diffX = startXHighlight - currentX;

        if (Math.abs(diffX) > 50) {
            isDraggingHighlight = false; 
            if (diffX > 0) {
                moveRight();
            } else {
                moveLeft();
            }
        }
    });

    carouselContainer.addEventListener('touchend', () => {
        isDraggingHighlight = false; 
    });

    window.addEventListener('resize', () => {
        itemWidthHighlight = window.innerWidth < 768 ? 300 : (window.innerWidth / 4 + 10);
        updateCarousel(); 
    });
</script>