{%- comment -%}
/**
 * Custom Product Slide Section
 * 
 * DESCRIPTION:
 * A dynamic and responsive product carousel section for Shopify themes that displays
 * products in an interactive sliding interface. This section supports multiple content
 * types including single products, collection products, and related products with
 * comprehensive multi-language support and customizable styling options.
 * 
 * CORE FEATURES:
 * - Responsive product carousel with touch/swipe navigation
 * - Multiple content types: single product, collection products, related products
 * - Multi-language support (English, German, French, Finnish)
 * - Customizable button styling with hover effects
 * - Configurable image aspect ratios (16:9, 3:4, 1:1, natural)
 * - Touch-friendly mobile navigation
 * - Dynamic section ID-based styling for multiple instances
 * - Product metafield integration for detailed product information
 * - Responsive breakpoints for optimal display across devices
 * 
 * TECHNICAL IMPLEMENTATION:
 * - CSS Grid and Flexbox for responsive layout
 * - JavaScript-powered carousel with touch event handling
 * - CSS custom properties for dynamic theming
 * - Section-specific CSS classes to prevent style conflicts
 * - Smooth CSS transitions and animations
 * - Performance-optimized touch event handling
 * 
 * SHOPIFY INTEGRATION:
 * - Shopify section schema with block-based content management
 * - Product and collection picker integration
 * - Shopify metafields for product specifications
 * - Shopify localization system integration
 * - Related products via custom metafields
 * 
 * RELATED FILES:
 * 
 * Core Section File:
 * - sections/Custom-product-slide.liquid - This main section file
 * 
 * Asset Dependencies:
 * - assets/section-basestyles.css - Base styling for custom sections
 * 
 * Snippet Dependencies:
 * - snippets/product-block.liquid - Product card rendering component
 * 
 * Layout Dependencies:
 * - layout/theme.liquid - Main theme layout with global settings
 * 
 * RESPONSIVE BREAKPOINTS:
 * - Desktop (>1200px): 3 products visible
 * - Tablet (769px-1200px): 2 products visible
 * - Mobile (≤768px): 1 product visible
 * - Small mobile (≤480px): Navigation arrows hidden
 * 
 * CONTENT TYPES:
 * 1. Single Product: Display individually selected products
 * 2. Collection Products: Display products from a selected collection
 * 3. Related Products: Display products related via custom metafields
 * 
 * BROWSER COMPATIBILITY:
 * - Modern browsers with CSS Grid and Flexbox support
 * - Touch event support for mobile devices
 * - CSS custom properties support
 * - ES6+ JavaScript features
 * 
 * PERFORMANCE CONSIDERATIONS:
 * - Section-specific CSS to avoid global style conflicts
 * - Efficient DOM manipulation and event handling
 * - Touch event debouncing for smooth interaction
 * - Optimized carousel positioning calculations
 * 
 * ACCESSIBILITY FEATURES:
 * - Semantic HTML structure
 * - Keyboard navigation support
 * - Screen reader friendly content
 * - High contrast hover states
 * 
 * CUSTOMIZATION OPTIONS:
 * - Section title with multi-language variants
 * - Image aspect ratio selection
 * - Button styling (colors, hover effects)
 * - Product limit configuration for collections
 * - Content type selection per block
 * 
 * METAFIELD INTEGRATION:
 * The section integrates with various product metafields including:
 * - Motor specifications (torque, model)
 * - Battery information (capacity, model)
 * - Display details (size, type)
 * - Frame and component specifications
 * - Brake and drivetrain information
 * 
 * USAGE SCENARIOS:
 * - Product recommendation sections
 * - Featured product showcases
 * - Related product displays
 * - Collection highlights
 * - Cross-selling opportunities
 */
{%- endcomment -%}

{{ 'section-basestyles.css' | asset_url | stylesheet_tag }}

{% assign locale_prefix = request.locale.iso_code | slice: 0, 2 | downcase %}

{% capture section_title %}
  {% case locale_prefix %}
    {% when 'de' %}{{ section.settings.title_de | default: section.settings.title_de }}
    {% when 'fr' %}{{ section.settings.title_fr | default: section.settings.title_fr }}
    {% when 'fi' %}{{ section.settings.title_fi | default: section.settings.title_fi }}
    {% else %}{{ section.settings.title }}
  {% endcase %}
{% endcapture %}

{% capture button_text %}
  {% case locale_prefix %}
    {% when 'de' %}{{ section.settings.button_text_de | default: 'Jetzt kaufen' }}
    {% when 'fr' %}{{ section.settings.button_text_fr | default: 'Acheter maintenant' }}
    {% when 'fi' %}{{ section.settings.button_text_fi | default: 'Osta nyt' }}
    {% else %}{{ section.settings.button_text | default: 'Buy now' }}
  {% endcase %}
{% endcapture %}

<div id="custom-product-carousel-{{ section.id }}" class="product-carousel-section" 
  data-section-id="{{ section.id }}"
  style="
    --button-bg: {{ section.settings.button_background_color | default: '#ffffff' }};
    --button-text: {{ section.settings.button_text_color | default: '#222222' }};
    --button-hover-bg: {{ section.settings.button_hover_background_color | default: '#222222' }};
    --button-hover-text: {{ section.settings.button_hover_text_color | default: '#ffffff' }};
  "
>
  <div class="container">
    <h2 class="section-title">
      {{ section_title | escape }}
    </h2>

    <div class="section-{{ section.id }}-carousel-outer">
      <div class="section-{{ section.id }}-carousel-container">
        <div class="section-{{ section.id }}-carousel-track">
          <div class="section-{{ section.id }}-carousel-slides" id="carousel-slides-{{ section.id }}">
            {% for block in section.blocks %}
              {% assign content_type = block.settings.content_type %}

              {% if content_type == 'product' and block.settings.selected_product != blank %}
                {% assign product = all_products[block.settings.selected_product] %}
                {% if product != blank %}
                  <div class="section-{{ section.id }}-carousel-slide">
                    {% render 'product-block', product: product %}
                  </div>
                {% endif %}

              {% elsif content_type == 'collection' and block.settings.selected_collection != blank %}
                {% assign collection = collections[block.settings.selected_collection] %}
                {% if collection != blank %}
                  {% for product in collection.products limit: block.settings.product_limit %}
                    <div class="section-{{ section.id }}-carousel-slide">
                      {% render 'product-block', product: product %}
                    </div>
                  {% endfor %}
                {% endif %}

              {% elsif content_type == 'related_products' %}
                {% if product != blank and template.name == 'product' %}
                  {% assign source_product = product %}
                {% elsif block.settings.related_products_source != blank %}
                  {% assign source_product = all_products[block.settings.related_products_source] %}
                {% else %}
                  {% assign source_product = null %}
                {% endif %}

                {% if source_product != blank %}
                  {% assign related_products = source_product.metafields.custom.related_products.value %}
                  {% if related_products %}
                    {% for related_product in related_products limit: block.settings.product_limit %}
                      <div class="section-{{ section.id }}-carousel-slide">
                        {% render 'product-block', product: related_product %}
                      </div>
                    {% endfor %}
                  {% endif %}
                {% endif %}
              {% endif %}
            {% endfor %}
          </div>
        </div>

        <div class="section-{{ section.id }}-carousel-arrows">
          <div class="section-{{ section.id }}-carousel-arrow section-{{ section.id }}-prev-arrow">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512" fill="white" width="20px" height="auto">
              <path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="48" d="M328 112L184 256l144 144"></path>
            </svg>
          </div>
          <div class="section-{{ section.id }}-carousel-arrow section-{{ section.id }}-next-arrow">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512" fill="white" width="20px" height="auto">
              <path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="48" d="M184 112l144 144-144 144"></path>
            </svg>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

{% schema %}
{
  "name": "Product Carousel",
  "settings": [
    {
      "type": "text",
      "id": "title",
      "label": "Heading (Default)",
      "default": "Featured Products"
    },
    {
      "type": "text",
      "id": "title_de",
      "label": "Heading (German)",
      "default": "Ausgewählte Produkte"
    },
    {
      "type": "text",
      "id": "title_fr",
      "label": "Heading (French)",
      "default": "Produits en vedette"
    },
    {
      "type": "text",
      "id": "title_fi",
      "label": "Heading (Finnish)",
      "default": "Esitellyt tuotteet"
    },
    {
      "type": "select",
      "id": "image_aspect_ratio",
      "label": "Image Aspect Ratio",
      "options": [
        { "value": "16/9", "label": "16:9" },
        { "value": "3/4", "label": "Portrait (3:4)" },
        { "value": "1/1", "label": "Square (1:1)" },
        { "value": "natural", "label": "Natural" }
      ],
      "default": "16/9"
    },
    {
      "type": "header",
      "content": "Button Settings"
    },
    {
      "type": "text",
      "id": "button_text",
      "label": "Button Text (Default)",
      "default": "Buy now"
    },
    {
      "type": "text",
      "id": "button_text_de",
      "label": "Button Text (German)",
      "default": "Jetzt kaufen"
    },
    {
      "type": "text",
      "id": "button_text_fr",
      "label": "Button Text (French)",
      "default": "Acheter maintenant"
    },
    {
      "type": "text",
      "id": "button_text_fi",
      "label": "Button Text (Finnish)",
      "default": "Osta nyt"
    },
    {
      "type": "color",
      "id": "button_background_color",
      "label": "Button Background Color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "button_text_color",
      "label": "Button Text Color",
      "default": "#222222"
    },
    {
      "type": "color",
      "id": "button_hover_background_color",
      "label": "Hover Background Color",
      "default": "#222222"
    },
    {
      "type": "color",
      "id": "button_hover_text_color",
      "label": "Hover Text Color",
      "default": "#ffffff"
    }
  ],
  "blocks": [
    {
      "type": "product_block",
      "name": "Product Block",
      "settings": [
        {
          "type": "radio",
          "id": "content_type",
          "label": "Content Type",
          "options": [
            {
              "value": "product",
              "label": "Single Product"
            },
            {
              "value": "collection",
              "label": "Collection Products"
            },
            {
              "value": "related_products",
              "label": "Related Products"
            }
          ],
          "default": "product"
        },
        {
          "type": "product",
          "id": "selected_product",
          "label": "Select Product",
          "info": "Only used when Content Type is Single Product"
        },
        {
          "type": "collection",
          "id": "selected_collection",
          "label": "Select Collection",
          "info": "Only used when Content Type is Collection Products"
        },
        {
          "type": "product",
          "id": "related_products_source",
          "label": "Select Product for Related Products",
          "info": "Only used when Content Type is Related Products and not on product page"
        },
        {
          "type": "range",
          "id": "product_limit",
          "min": 1,
          "max": 10,
          "step": 1,
          "default": 4,
          "label": "Maximum Products to Show",
          "info": "For Collection and Related Products"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Product Carousel",
      "category": "Products",
      "blocks": [
        {
          "type": "product_block",
          "settings": {
            "content_type": "product"
          }
        },
        {
          "type": "product_block",
          "settings": {
            "content_type": "product"
          }
        },
        {
          "type": "product_block",
          "settings": {
            "content_type": "product"
          }
        },
        {
          "type": "product_block",
          "settings": {
            "content_type": "product"
          }
        }
      ]
    }
  ]
}
{% endschema %}

<style>
  #custom-product-carousel-{{ section.id }} {
    margin: 80px 0;
  }

  #custom-product-carousel-{{ section.id }} .section-{{ section.id }}-carousel-track {
    touch-action: pan-y;
    overflow: hidden;
  }

  #custom-product-carousel-{{ section.id }} .section-{{ section.id }}-carousel-slides {
    will-change: transform;
    display: flex;
    min-width: 100%;
  }

  #custom-product-carousel-{{ section.id }} .section-{{ section.id }}-carousel-track {
    touch-action: pan-x;
  }

  #custom-product-carousel-{{ section.id }} .section-{{ section.id }}-carousel-outer {
    position: relative;
    padding: 0; 
  }

  #custom-product-carousel-{{ section.id }} .section-{{ section.id }}-carousel-container {
    position: relative;
    border-radius: 12px;
    padding: 0 20px; 
  }

  #custom-product-carousel-{{ section.id }} .section-{{ section.id }}-carousel-track {
    overflow: hidden;
  }

  #custom-product-carousel-{{ section.id }} .section-{{ section.id }}-carousel-slides {
    display: flex;
    transition: transform 0.5s ease;
    padding: 5px 0;
  }

  #custom-product-carousel-{{ section.id }} .section-{{ section.id }}-carousel-slide {
    flex: 0 0 auto;
    width: calc(33.333% - 20px);
    margin-right: 20px;
    flex-shrink: 0;
    display: flex;
    flex-direction: column;
    border: 1px solid #e0e0e0;
    border-radius: 8px;
    overflow: hidden;
    height: 100%;
  }

  .section-{{ section.id }}-product-block-container {
    flex: 1;
    width: 100%;
  }

  .section-{{ section.id }}-product-button:hover {
    background-color: var(--button-hover-bg);
    color: var(--button-hover-text);
    border-color: var(--button-hover-bg);
  }

  .section-{{ section.id }}-carousel-arrows {
    position: absolute;
    top: 50%;
    left: 0;
    right: 0;
    display: flex;
    justify-content: space-between;
    transform: translateY(-50%);
    pointer-events: none;
    z-index: 10;
  }

  .section-{{ section.id }}-carousel-arrow {
    width: 50px;
    height: 50px;
    border-radius: 50%;
    background: rgba(0, 0, 0, 0.8);
    color: white;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    pointer-events: auto;
    opacity: 0.8;
    transition: all 0.3s;
    box-shadow: 0 2px 12px rgba(0, 0, 0, 0.25);
  }

  .section-{{ section.id }}-carousel-arrow:hover {
    opacity: 1;
    background: #000;
    transform: scale(1.05);
  }

  .section-{{ section.id }}-carousel-arrow.hidden {
    visibility: hidden;
    opacity: 0;
    pointer-events: none;
  }

  .section-{{ section.id }}-carousel-slide .product-block .product-block__detail { 
     padding: 10px 20px; 
  }

  .section-{{ section.id }}-carousel-slide {
    border: 1px solid #e0e0e0;
    border-radius: 8px;
    overflow: hidden;
    height: 100%;
    display: flex;
    flex-direction: column;
  }

  .section-{{ section.id }}-product-block-container {
    flex: 1;
    width: 100%;
  }

  .section-{{ section.id }}-product-button:hover {
    background-color: var(--button-hover-bg);
    color: var(--button-hover-text);
    border-color: var(--button-hover-bg);
  }

  .section-{{ section.id }}-carousel-arrows {
    position: absolute;
    top: 50%;
    left: 0;
    right: 0;
    display: flex;
    justify-content: space-between;
    transform: translateY(-50%);
    pointer-events: none;
    z-index: 10;
  }

  .section-{{ section.id }}-carousel-arrow {
    width: 50px;
    height: 50px;
    border-radius: 50%;
    background: rgba(0, 0, 0, 0.8);
    color: white;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    pointer-events: auto;
    opacity: 0.8;
    transition: all 0.3s;
    box-shadow: 0 2px 12px rgba(0, 0, 0, 0.25);
  }

  .section-{{ section.id }}-carousel-arrow:hover {
    opacity: 1;
    background: #000;
    transform: scale(1.05);
  }

  .section-{{ section.id }}-carousel-arrow.hidden {
    visibility: hidden;
    opacity: 0;
    pointer-events: none;
  }

  .section-{{ section.id }}-carousel-slide {
    width: calc(50% - 15px);
  }

  @media (max-width: 1200px) {
    #custom-product-carousel-{{ section.id }} .section-{{ section.id }}-carousel-slide {
      width: calc(50% - 15px);
    }

    #custom-product-carousel-{{ section.id }} .section-{{ section.id }}-carousel-outer {
      padding: 0 20px; 
    }

    #custom-product-carousel-{{ section.id }} .section-{{ section.id }}-carousel-container {
      padding: 0 20px; 
    }
  }

  @media (max-width: 768px) {
    #custom-product-carousel-{{ section.id }} .container {
      padding-left: 15px;
      padding-right: 0;
    }

     #custom-product-carousel-{{ section.id }} .section-{{ section.id }}-carousel-container {
      padding: 0;
    }

    #custom-product-carousel-{{ section.id }} {
      margin: 50px 0;
    }

    #custom-product-carousel-{{ section.id }} .section-{{ section.id }}-carousel-outer {
      padding: 0 15px; /* 移动端调整内边距 */
    }

    #custom-product-carousel-{{ section.id }} .section-{{ section.id }}-carousel-slide {
      width: calc(100% - 30px);
      margin-right: 10px;
    }

    #custom-product-carousel-{{ section.id }} .section-{{ section.id }}-carousel-arrow {
      width: 40px;
      height: 40px;
    }
  }

  @media (max-width: 480px) {
    #custom-product-carousel-{{ section.id }} .section-{{ section.id }}-carousel-outer {
      padding: 0; /* 小屏幕移除内边距 */
    }

    #custom-product-carousel-{{ section.id }} .section-{{ section.id }}-carousel-arrows {
      display: none;
    }
  }
</style>

<script>
document.addEventListener('DOMContentLoaded', function () {
const carousels = document.querySelectorAll('.product-carousel-section');

carousels.forEach((section) => {
const sectionId = section.getAttribute('data-section-id');
const slidesContainer = section.querySelector('.section-' + sectionId + '-carousel-slides');
const slides = Array.from(slidesContainer.children);
const prevArrow = section.querySelector('.section-' + sectionId + '-prev-arrow');
const nextArrow = section.querySelector('.section-' + sectionId + '-next-arrow');
const carouselTrack = section.querySelector('.section-' + sectionId + '-carousel-track');

if (!slidesContainer || slides.length === 0) return;

let currentIndex = 0;
let slidesToShow = 3;
let slideWidth = 0;
let touchStartX = 0;
let touchStartY = 0;
let touchEndX = 0;
let isDragging = false;
let isHorizontal = false;

function initCarousel() {
updateSlidesToShow();
updateSlideWidth();
updateArrows();
positionSlides();
}

function updateSlidesToShow() {
if (window.innerWidth < 769) {
slidesToShow = 1;
} else if (window.innerWidth < 1201) {
slidesToShow = 2;
} else {
slidesToShow = 3;
}
}

function updateSlideWidth() {
if (slides.length > 0) {
slideWidth = slides[0].offsetWidth + parseFloat(window.getComputedStyle(slides[0]).marginRight);
}
}

function updateArrows() {
if (slides.length <= slidesToShow) {
prevArrow.classList.add('hidden');
nextArrow.classList.add('hidden');
return;
}

prevArrow.classList.remove('hidden');
nextArrow.classList.remove('hidden');

prevArrow.style.opacity = currentIndex === 0 ? '0.3' : '0.8';
nextArrow.style.opacity = currentIndex >= slides.length - slidesToShow ? '0.3' : '0.8';
}

function positionSlides() {
slidesContainer.style.transform = `translateX(-${currentIndex * slideWidth}px)`;
}

function movePrev() {
if (currentIndex > 0) {
currentIndex--;
updateArrows();
positionSlides();
}
}

function moveNext() {
if (currentIndex < slides.length - slidesToShow) {
currentIndex++;
updateArrows();
positionSlides();
}
}

function handleTouchStart(e) {
touchStartX = e.touches[0].clientX;
touchStartY = e.touches[0].clientY;
isDragging = true;
isHorizontal = false;
slidesContainer.style.transition = 'none';
}

function handleTouchMove(e) {
if (!isDragging) return;

const touchX = e.touches[0].clientX;
const touchY = e.touches[0].clientY;
const diffX = touchX - touchStartX;
const diffY = touchY - touchStartY;
touchEndX = touchX;

if (!isHorizontal) {
if (Math.abs(diffX) > Math.abs(diffY)) {
isHorizontal = true;
} else {
return;
}
}

if (isHorizontal) {
e.preventDefault();
}

const maxOffset = Math.max(0, (slides.length - slidesToShow) * slideWidth);
const minOffset = 0;

let tempOffset = currentIndex * slideWidth * -1 + diffX;

if (tempOffset > minOffset) tempOffset = minOffset;
if (tempOffset < -maxOffset) tempOffset = -maxOffset;

slidesContainer.style.transform = `translateX(${tempOffset}px)`;
}

function handleTouchEnd() {
if (!isDragging) return;

isDragging = false;
slidesContainer.style.transition = 'transform 0.5s ease';

const diff = touchEndX - touchStartX;
const threshold = 50;

if (isHorizontal) {
if (diff > threshold) {
movePrev();
} else if (diff < -threshold) {
moveNext();
} else {
positionSlides();
}
}
}

// 确保所有事件监听器使用正确的类名引用
carouselTrack.addEventListener('touchstart', handleTouchStart);
carouselTrack.addEventListener('touchmove', handleTouchMove, { passive: false });
carouselTrack.addEventListener('touchend', handleTouchEnd);

initCarousel();

prevArrow.addEventListener('click', movePrev);
nextArrow.addEventListener('click', moveNext);

window.addEventListener('resize', function () {
updateSlidesToShow();
updateSlideWidth();
currentIndex = Math.min(currentIndex, Math.max(0, slides.length - slidesToShow));
updateArrows();
positionSlides();
});
});
});
</script>
