{%- comment -%}
/**
 * Go to Top Button Component
 * 
 * A floating scroll-to-top button that appears when users scroll down the page,
 * providing a convenient way to quickly return to the top of the page with smooth
 * scrolling animation and responsive design.
 * 
 * FEATURES:
 * - Auto-show/hide based on scroll position
 * - Smooth scroll animation to top
 * - Responsive design with hover effects
 * - Accessible with ARIA labels
 * - Performance-optimized scroll detection
 * - CSS custom properties for easy customization
 * - Fixed positioning with high z-index
 * 
 * BEHAVIOR:
 * - Hidden by default when page loads
 * - Appears when user scrolls down 100px or more
 * - Disappears when user scrolls back to top
 * - Smooth fade-in/fade-out transitions
 * - Scale animation on hover and click
 * 
 * VISUAL DESIGN:
 * - Circular button with arrow icon
 * - Fixed position at bottom-right corner
 * - Black background with white icon (customizable)
 * - Subtle shadow for depth
 * - Smooth transform animations
 * 
 * ACCESSIBILITY:
 * - Proper ARIA label for screen readers
 * - Keyboard accessible button element
 * - High contrast color scheme
 * - Focus-friendly design
 * 
 * PERFORMANCE:
 * - Throttled scroll event handling (50ms delay)
 * - Efficient DOM manipulation
 * - CSS transitions for smooth animations
 * - Minimal JavaScript footprint
 * 
 * CUSTOMIZATION:
 * - CSS custom properties for colors and size
 * - Configurable scroll threshold
 * - Adjustable positioning
 * - Scalable SVG icon
 * 
 * TECHNICAL FEATURES:
 * - Cross-browser compatible scroll detection
 * - Debounced scroll event for performance
 * - Smooth scrolling with native browser API
 * - Self-contained with no external dependencies
 * 
 * BROWSER SUPPORT:
 * - Modern browsers with CSS custom properties
 * - Fallback for older browsers
 * - Touch device optimization
 */
{%- endcomment -%}

{% schema %}
{
  "name": "Go to top",
  "settings": [],
  "presets": [
    {
      "name": "Go to top",
      "category": "Custom"
    }
  ]
}
{% endschema %}

<style>
  .scroll-to-top {
    --bg-color: #000;
    --icon-color: #fff;
    --size: 50px;

    position: fixed;
    bottom: 80px;
    right: 50px;
    background-color: var(--bg-color);
    color: var(--icon-color);
    border: none;
    border-radius: 50%;
    width: var(--size);
    height: var(--size);
    cursor: pointer;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);
    opacity: 0;
    visibility: hidden;
    transition: opacity 0.3s ease, transform 0.2s ease, visibility 0.3s;
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 1000;
    transform: scale(0.95);
  }

  .scroll-to-top.show {
    opacity: 1;
    visibility: visible;
    transform: scale(1);
  }

  .scroll-to-top:hover {
    transform: scale(1.05);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.25);
  }

  .scroll-to-top:active {
    transform: scale(0.98);
  }

  .scroll-to-top svg {
    width: 40%;
    height: auto;
  }
</style>

<button
  class="scroll-to-top"
  id="scrollToTopBtn"
  aria-label="Scroll to top"
>
  <svg viewBox="0 0 512 512" xmlns="http://www.w3.org/2000/svg">
    <polygon fill="currentColor" points="390.624 150.625 256 16 121.376 150.625 144.004 173.252 240.001 77.254 240.001 495.236 272.001 495.236 272.001 77.257 367.996 173.252 390.624 150.625"/>
  </svg>
</button>

<script>
  (function () {
    const scrollBtn = document.getElementById('scrollToTopBtn');
    let scrollTimeout = null;

    function handleScroll() {
      clearTimeout(scrollTimeout);
      scrollTimeout = setTimeout(() => {
        const scrollThreshold = 100;
        const scrollPosition = Math.max(document.body.scrollTop, document.documentElement.scrollTop);

        scrollBtn.classList.toggle('show', scrollPosition > scrollThreshold);
      }, 50);
    }

    scrollBtn.addEventListener('click', () => {
      window.scrollTo({
        top: 0,
        behavior: 'smooth',
      });
    });

    window.addEventListener('scroll', handleScroll);

    handleScroll();
  })();
</script>
