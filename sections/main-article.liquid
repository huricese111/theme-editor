{%- comment -%}
/**
 * Main Article Section
 * 
 * A comprehensive Shopify Liquid section for displaying individual blog articles
 * with featured images, content formatting, social sharing, comments, and navigation.
 * 
 * CORE FUNCTIONALITY:
 * - Featured image display with overlay options and responsive sizing
 * - Article content rendering with rich typography and formatting
 * - Article metadata display (date, author, tags)
 * - Social media sharing integration
 * - Article navigation (previous/next articles)
 * - Comments system with form submission
 * - Responsive design with mobile optimization
 * - Animation support for enhanced user experience
 * 
 * TECHNICAL IMPLEMENTATION:
 * - Uses Shopify's article object for content rendering
 * - Liquid templating for dynamic content and conditional rendering
 * - CSS-in-Liquid for comprehensive styling
 * - Form handling for comment submissions
 * - Pagination support for comment lists
 * - Structured data integration for SEO
 * 
 * SHOPIFY INTEGRATION:
 * - Section-based architecture compatible with Shopify theme customizer
 * - Settings schema for admin panel customization
 * - Blog and article object integration
 * - Comment system integration with Shopify's native commenting
 * - Social sharing URL generation
 * - Tag-based navigation support
 * 
 * RELATED FILES:
 * - snippets/image.liquid - Handles responsive image rendering
 * - snippets/animation-attrs.liquid - Provides animation attributes for elements
 * - snippets/social-share.liquid - Social media sharing functionality (referenced but not found)
 * - snippets/pagination-control.liquid - Pagination controls (referenced but not found)
 * - snippets/form-errors.liquid - Form error handling (referenced but not found)
 * - snippets/structured-data-article.liquid - SEO structured data (referenced but not found)
 * 
 * LAYOUT OPTIONS:
 * - Featured image with multiple height options (compact, small, medium, large, natural)
 * - Full-width or contained image display
 * - Title overlay on featured image with various overlay styles
 * - Responsive typography scaling
 * - Two-column and single-column layouts
 * 
 * RESPONSIVE DESIGN:
 * - Desktop: Wide container with optimized typography (up to 1400px)
 * - Tablet: Medium container with adjusted spacing
 * - Mobile: Compact layout with stacked navigation
 * - Progressive font sizing using clamp() function
 * - Touch-friendly interactive elements
 * 
 * ACCESSIBILITY:
 * - Semantic HTML structure with proper heading hierarchy
 * - ARIA labels and descriptions for form elements
 * - Focus management for interactive elements
 * - Screen reader friendly content structure
 * - Keyboard navigation support
 * 
 * CUSTOMIZATION OPTIONS:
 * - Show/hide article metadata (date, author, tags)
 * - Social sharing platform selection (Twitter/X, Facebook, Pinterest)
 * - Featured image display and sizing options
 * - Title overlay styles and positioning
 * - Comment system enable/disable
 * - Full-width or contained layout options
 * 
 * CONTENT FEATURES:
 * - Rich text content with enhanced typography
 * - Image optimization and responsive sizing
 * - Tag-based article categorization
 * - Article navigation between posts
 * - Comment threading and moderation support
 * - Social media sharing with custom URLs
 * 
 * STYLING FEATURES:
 * - Modern sans-serif typography stack
 * - Consistent color scheme with CSS custom properties
 * - Smooth transitions and hover effects
 * - Card-based design for comments and navigation
 * - Gradient overlays and shadow effects
 * - Mobile-first responsive breakpoints
 * 
 * BROWSER COMPATIBILITY:
 * - Modern browsers with CSS Grid and Flexbox support
 * - CSS custom properties (CSS variables)
 * - CSS clamp() function for responsive typography
 * - Progressive enhancement approach
 * - Fallback support for older browsers
 * 
 * PERFORMANCE CONSIDERATIONS:
 * - Eager loading for featured images
 * - Optimized CSS with minimal specificity
 * - Efficient DOM structure
 * - Compressed and minified styles
 * - Progressive image loading
 * 
 * USE CASES:
 * - Blog article pages
 * - News and announcement posts
 * - Product story and feature articles
 * - Company blog and content marketing
 * - Editorial and magazine-style content
 * 
 * FORM HANDLING:
 * - Comment submission with validation
 * - Error handling and success messaging
 * - Moderation notice display
 * - Required field validation
 * - Email format validation
 * 
 * SEO FEATURES:
 * - Structured data integration for articles
 * - Semantic HTML markup
 * - Meta information display
 * - Social sharing optimization
 * - Tag-based content organization
 * 
 * ANIMATION SUPPORT:
 * - Scroll-triggered animations via animation-attrs snippet
 * - Staggered animation delays for content sections
 * - Smooth transitions for interactive elements
 * - Progressive content reveal
 * 
 * MISSING DEPENDENCIES:
 * Note: The following referenced snippets are not found in the current project:
 * - snippets/social-share.liquid
 * - snippets/pagination-control.liquid
 * - snippets/form-errors.liquid
 * - snippets/structured-data-article.liquid
 * These may need to be created or restored for full functionality.
 */
{%- endcomment -%}

{% if section.settings.show_featured_image and article.image != blank %}
  <div class="article-hero {% unless section.settings.full_width_image %}container{% endunless %}">
    {% if section.settings.featured_image_height == 'natural' %}
      <div
        class="hero-image-container {% if section.settings.enable_title_overlay %}hero-overlay hero-overlay--{{ section.settings.overlay_style }}{% endif %}"
        style="--aspect-ratio: {{ article.image.aspect_ratio | default: 2.0 }}"
      >
        {% if section.settings.enable_title_overlay %}
          <div class="hero-image">
            {%- render 'image' with article.image, loading: 'eager', class: 'hero-img' -%}
          </div>
          <div class="hero-content" {%- render 'animation-attrs', attrs: 'data-cc-animate data-cc-animate-delay="0.2s"' -%}>
            <div class="hero-text">
              <h1 class="hero-title">{{ article.title | escape }}</h1>
            </div>
          </div>
        {% else %}
          {%- render 'image' with article.image, loading: 'eager', class: 'hero-img' -%}
        {% endif %}
      </div>
    {% else %}
      <div class="hero-image-container hero-fixed-height {% if section.settings.enable_title_overlay %}hero-overlay hero-overlay--{{ section.settings.overlay_style }}{% endif %} hero--{{ section.settings.featured_image_height }}">
        {% if section.settings.enable_title_overlay %}
          <div class="hero-image">
            {%- render 'image' with article.image, loading: 'eager' -%}
          </div>
          <div class="hero-content" {%- render 'animation-attrs', attrs: 'data-cc-animate data-cc-animate-delay="0.2s"' -%}>
            <div class="hero-text">
              <h1 class="hero-title">{{ article.title | escape }}</h1>
            </div>
          </div>
        {% else %}
          {%- render 'image' with article.image, loading: 'eager' -%}
        {% endif %}
      </div>
    {% endif %}
  </div>
{% endif %}

<article class="article-wrapper">
  <div class="article-container">
    {% if section.settings.enable_title_overlay == false or section.settings.show_featured_image == false or article.image == blank %}
      <header class="article-header" {%- render 'animation-attrs', attrs: 'data-cc-animate' -%}>
        <h1 class="article-title">{{ article.title | escape }}</h1>
      </header>
    {% endif %}

    <div class="article-meta-top" {%- render 'animation-attrs', attrs: 'data-cc-animate' -%}>
      {% if section.settings.show_date or section.settings.show_author %}
        <div class="meta-info">
          {% if section.settings.show_date %}
            <time class="article-date" datetime="{{ article.published_at | date: '%Y-%m-%d' }}">
              {{ article.published_at | date: '%B %d, %Y' }}
            </time>
          {% endif %}
          {% if section.settings.show_author %}
            <span class="meta-separator">•</span>
            <span class="article-author">{{ article.author }}</span>
          {% endif %}
        </div>
      {% endif %}
    </div>

    <div class="article-content" {%- render 'animation-attrs', attrs: 'data-cc-animate' -%}>
      <div class="prose">
        {{ article.content }}
      </div>
    </div>

    {%- if section.settings.show_article_tags -%}
      <div class="article-tags" {%- render 'animation-attrs', attrs: 'data-cc-animate' -%}>
        <div class="tags-container">
          <span class="tags-label">{{ 'blogs.tags.label' | t }}</span>
          <div class="tags-list">
            {% for tag in article.tags %}
              <a href="{{ tag | link_to_tag: tag | split: '"' | last | split: '"' | first }}" class="tag-item">
                {{ tag }}
              </a>
            {% endfor %}
          </div>
        </div>
      </div>
    {%- endif -%}

    {% if section.settings.show_sharing_icons %}
      <div class="article-sharing" {%- render 'animation-attrs', attrs: 'data-cc-animate' -%}>
        <div class="sharing-container">
          <h3 class="sharing-title">{{ 'general.social.share_heading' | t }}</h3>
          <div class="sharing-buttons">
            {% render 'social-share',
              share_twitter: section.settings.show_twitter,
              share_facebook: section.settings.show_facebook,
              share_pinterest: section.settings.show_pinterest,
              share_title: article.title,
              share_url: article.url,
              share_image: article.image
            %}
          </div>
        </div>
      </div>
    {% endif %}

    <nav class="article-navigation" {%- render 'animation-attrs', attrs: 'data-cc-animate' -%}>
      <div class="nav-container">
        {% if blog.previous_article %}
          <a href="{{ blog.previous_article }}" class="nav-link nav-prev">
            <span class="nav-direction">{{ 'blogs.pagination.older_articles' | t }}</span>
            <span class="nav-title">{{ blog.previous_article.title | truncate: 50 }}</span>
          </a>
        {% endif %}
        
        <a href="{{ blog.url }}" class="nav-back">
          {{ 'blogs.article.back_to_blog' | t: title: blog.title }}
        </a>
        
        {% if blog.next_article %}
          <a href="{{ blog.next_article }}" class="nav-link nav-next">
            <span class="nav-direction">{{ 'blogs.pagination.newer_articles' | t }}</span>
            <span class="nav-title">{{ blog.next_article.title | truncate: 50 }}</span>
          </a>
        {% endif %}
      </div>
    </nav>
  </div>
</article>

{% if blog.comments_enabled? %}
  <section class="comments-section">
    <div class="comments-container">
      {% paginate article.comments by 50 %}
        {% if article.comments != blank %}
          <div id="comments" class="comments-list" {%- render 'animation-attrs', attrs: 'data-cc-animate' -%}>
            <h2 class="comments-title">{{ 'blogs.comments.title' | t }}</h2>
            
            {% if comment and comment.status != 'published' %}
              <div class="comment comment--pending">
                <div class="comment-content">{{ comment.content }}</div>
                <div class="comment-author">{{ comment.author }}</div>
              </div>
            {% endif %}
            
            <div class="comments-grid">
              {% for comment in article.comments %}
                <div class="comment {% if forloop.first %}comment--first{% endif %}">
                  <div class="comment-content">{{ comment.content }}</div>
                  <div class="comment-meta">
                    <span class="comment-author">{{ comment.author }}</span>
                    <time class="comment-date">{{ comment.created_at | date: '%B %d, %Y' }}</time>
                  </div>
                </div>
              {% endfor %}
            </div>
          </div>
          
          <div class="pagination-wrapper" {%- render 'animation-attrs', attrs: 'data-cc-animate' -%}>
            {% render 'pagination-control', paginate: paginate %}
          </div>
        {% endif %}
      {% endpaginate %}
      
      <div class="comment-form-wrapper" {%- render 'animation-attrs', attrs: 'data-cc-animate' -%}>
        {% form article %}
          <h3 class="form-title">{{ 'blogs.comments.form_title' | t }}</h3>
          
          {% if form.posted_successfully? %}
            <div class="form-success">{{ 'blogs.comments.success' | t }}</div>
          {% endif %}
          
          {% if blog.moderated? %}
            <div class="form-notice">{{ 'blogs.comments.moderated' | t }}</div>
          {% endif %}
          
          {%- assign error_heading = 'blogs.comments.error_heading' | t -%}
          {%- render 'form-errors', form: form, error_heading: error_heading -%}
          
          <div class="form-grid">
            <div class="form-group {% if form.errors contains 'author' %}form-group--error{% endif %}">
              <label for="comment_author" class="form-label">{{ 'blogs.comments.name' | t }}</label>
              <input type="text" id="comment_author" name="comment[author]" class="form-input" value="{{ form.author }}" required>
            </div>
            
            <div class="form-group {% if form.errors contains 'email' %}form-group--error{% endif %}">
              <label for="comment_email" class="form-label">{{ 'blogs.comments.email' | t }}</label>
              <input type="email" id="comment_email" name="comment[email]" class="form-input" value="{{ form.email }}" required>
            </div>
            
            <div class="form-group form-group--full {% if form.errors contains 'body' %}form-group--error{% endif %}">
              <label for="comment_body" class="form-label">{{ 'blogs.comments.message' | t }}</label>
              <textarea id="comment_body" name="comment[body]" class="form-textarea" rows="6" required>{{ form.body }}</textarea>
            </div>
            
            <div class="form-submit">
              <button type="submit" class="btn btn--primary">{{ 'blogs.comments.post' | t }}</button>
            </div>
          </div>
        {% endform %}
      </div>
    </div>
  </section>
{% endif %}

{% render 'structured-data-article', article: article %}

<style>  
  * {
    box-sizing: border-box;
  }
  
  .article-wrapper {
    background: #ffffff;
    color: #1a1a1a;
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Helvetica Neue', Helvetica, Arial, sans-serif;
    line-height: 1.6;
    min-height: 100vh;
  }
  
  /* 英雄区域样式 */
  .article-hero {
    margin-bottom: 0;
  }
  
  .hero-image-container {
    position: relative;
    overflow: hidden;
    border-radius: 0 0 12px 12px;
  }
  
  .hero-image-container.hero-fixed-height {
    height: 50vh;
    min-height: 350px;
    max-height: 500px;
  }
  
  .hero-img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.3s ease;
  }
  
  .hero-overlay .hero-image::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(135deg, rgba(0,0,0,0.4) 0%, rgba(0,0,0,0.1) 100%);
  }
  
  .hero-content {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    padding: 40px;
    z-index: 2;
  }
  
  .hero-title {
    font-size: clamp(2rem, 4vw, 3.5rem);
    font-weight: 700;
    line-height: 1.2;
    color: white;
    text-shadow: 0 2px 15px rgba(0,0,0,0.3);
    margin: 0;
    max-width: 900px;
  }
  
  /* 文章容器 - 桌面端更宽 */
  .article-container {
    max-width: 900px;
    margin: 0 auto;
    padding: 0 24px;
  }
  
  @media (min-width: 768px) {
    .article-container {
      max-width: 1000px;
      padding: 0 40px;
    }
  }
  
  @media (min-width: 1024px) {
    .article-container {
      max-width: 1200px;
      padding: 0 60px;
    }
  }
  
  @media (min-width: 1200px) {
    .article-container {
      max-width: 1400px;
      padding: 0 80px;
    }
  }
  
  .article-header {
    text-align: center;
    padding: 60px 0 10px;
    border-bottom: 1px solid #e5e5e5;
    margin-bottom: 10px;
  }
  
  .article-title {
    font-size: clamp(2rem, 4vw, 3rem);
    font-weight: 700;
    line-height: 1.2;
    color: #1a1a1a;
    margin: 0;
    letter-spacing: -0.01em;
  }
  
  /* 文章元信息 */
  .article-meta-top {
    padding: 32px 0;
    border-bottom: 1px solid #e5e5e5;
    margin-bottom: 40px;
  }
  
  .meta-info {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 12px;
    font-size: 15px;
    color: #666666;
  }
  
  .article-date {
    font-weight: 500;
    color: #333333;
  }
  
  .meta-separator {
    opacity: 0.6;
  }
  
  .article-author {
    font-weight: 600;
    color: #1a1a1a;
  }
  
  /* 文章内容 - 无衬线字体 */
  .article-content {
    margin-bottom: 60px;
  }
  
  .prose {
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Helvetica Neue', Helvetica, Arial, sans-serif;
    font-size: 18px;
    line-height: 1.7;
    color: #1a1a1a;
  }
  
  @media (min-width: 768px) {
    .prose {
      font-size: 19px;
      line-height: 1.75;
    }
  }
  
  .prose h1, .prose h2, .prose h3, .prose h4, .prose h5, .prose h6 {
    font-family: inherit;
    font-weight: 700;
    line-height: 1.3;
    margin: 40px 0 20px;
    color: #1a1a1a;
    letter-spacing: -0.01em;
  }
  
  .prose h1 { font-size: 2rem; }
  .prose h2 { font-size: 1.75rem; }
  .prose h3 { font-size: 1.5rem; }
  .prose h4 { font-size: 1.25rem; }
  
  .prose p {
    margin: 20px 0;
  }
  
  .prose p:first-child {
    font-size: 20px;
    font-weight: 400;
    color: #333333;
    margin-bottom: 24px;
  }
  
  .prose blockquote {
    border-left: 4px solid #d1d5db;
    padding-left: 20px;
    margin: 30px 0;
    font-style: italic;
    font-size: 19px;
    color: #4a5568;
  }
  
  .prose ul, .prose ol {
    margin: 20px 0;
    padding-left: 28px;
  }
  
  .prose li {
    margin: 6px 0;
  }
  
  .prose img {
    width: 100%;
    height: auto;
    border-radius: 8px;
    margin: 32px 0;
    box-shadow: 0 2px 15px rgba(0,0,0,0.08);
  }
  
  .prose a {
    color: #2563eb;
    text-decoration: underline;
    text-decoration-thickness: 1px;
    text-underline-offset: 2px;
    transition: color 0.2s ease;
  }
  
  .prose a:hover {
    color: #1d4ed8;
  }
  
  /* 标签样式 */
  .article-tags {
    padding: 28px 0;
    border-top: 1px solid #e5e5e5;
    border-bottom: 1px solid #e5e5e5;
    margin-bottom: 40px;
  }
  
  .tags-container {
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    gap: 16px;
  }
  
  .tags-label {
    font-weight: 600;
    color: #666666;
    font-size: 14px;
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }
  
  .tags-list {
    display: flex;
    flex-wrap: wrap;
    gap: 8px;
  }
  
  .tag-item {
    background: #f3f4f6;
    color: #374151;
    padding: 6px 14px;
    border-radius: 16px;
    font-size: 14px;
    font-weight: 500;
    text-decoration: none;
    transition: all 0.2s ease;
  }
  
  .tag-item:hover {
    background: #e5e7eb;
    color: #1f2937;
  }
  
  /* 分享区域 */
  .article-sharing {
    text-align: center;
    padding: 32px;
    background: #f8f9fa;
    border-radius: 10px;
    margin-bottom: 40px;
  }
  
  .sharing-title {
    font-size: 18px;
    font-weight: 600;
    color: #1a1a1a;
    margin: 0 0 16px;
  }
  
  /* 文章导航 */
  .article-navigation {
    margin-bottom: 60px;
  }
  
  .nav-container {
    display: grid;
    grid-template-columns: 1fr auto 1fr;
    gap: 20px;
    align-items: center;
  }
  
  .nav-link {
    display: block;
    padding: 20px;
    background: #f8f9fa;
    border-radius: 8px;
    text-decoration: none;
    transition: all 0.2s ease;
    border: 1px solid #e9ecef;
  }
  
  .nav-link:hover {
    background: #e9ecef;
    border-color: #dee2e6;
    transform: translateY(-1px);
  }
  
  .nav-prev {
    text-align: left;
  }
  
  .nav-next {
    text-align: right;
  }
  
  .nav-direction {
    display: block;
    font-size: 12px;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.05em;
    color: #666666;
    margin-bottom: 4px;
  }
  
  .nav-title {
    display: block;
    font-size: 15px;
    font-weight: 600;
    color: #1a1a1a;
    line-height: 1.4;
  }
  
  .nav-back {
    padding: 12px 20px;
    background: #2563eb;
    color: white;
    text-decoration: none;
    border-radius: 6px;
    font-weight: 600;
    font-size: 14px;
    transition: background 0.2s ease;
  }
  
  .nav-back:hover {
    background: #1d4ed8;
  }
  
  /* 评论区域 */
  .comments-section {
    background: #f8f9fa;
    padding: 60px 0;
  }
  
  .comments-container {
    max-width: 900px;
    margin: 0 auto;
    padding: 0 24px;
  }
  
  @media (min-width: 768px) {
    .comments-container {
      max-width: 1000px;
      padding: 0 40px;
    }
  }
  
  .comments-title {
    font-size: 1.75rem;
    font-weight: 700;
    color: #1a1a1a;
    text-align: center;
    margin: 0 0 40px;
  }
  
  .comments-grid {
    display: grid;
    gap: 20px;
  }
  
  .comment {
    background: white;
    padding: 24px;
    border-radius: 10px;
    box-shadow: 0 1px 3px rgba(0,0,0,0.08);
    border-left: 3px solid #e5e7eb;
  }
  
  .comment--pending {
    border-left-color: #f59e0b;
    background: #fffbeb;
  }
  
  .comment-content {
    font-size: 16px;
    line-height: 1.6;
    color: #1a1a1a;
    margin-bottom: 12px;
  }
  
  .comment-meta {
    display: flex;
    justify-content: space-between;
    align-items: center;
    font-size: 14px;
  }
  
  .comment-author {
    font-weight: 600;
    color: #1a1a1a;
  }
  
  .comment-date {
    color: #666666;
  }
  
  /* 评论表单 */
  .comment-form-wrapper {
    background: white;
    padding: 40px;
    border-radius: 10px;
    box-shadow: 0 2px 10px rgba(0,0,0,0.08);
    margin-top: 40px;
  }
  
  .form-title {
    font-size: 1.5rem;
    font-weight: 700;
    color: #1a1a1a;
    margin: 0 0 28px;
    text-align: center;
  }
  
  .form-grid {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 20px;
  }
  
  .form-group--full {
    grid-column: 1 / -1;
  }
  
  .form-label {
    display: block;
    font-weight: 600;
    color: #1a1a1a;
    margin-bottom: 8px;
    font-size: 14px;
  }
  
  .form-input,
  .form-textarea {
    width: 100%;
    padding: 12px 16px;
    border: 2px solid #e5e7eb;
    border-radius: 6px;
    font-size: 16px;
    font-family: inherit;
    transition: border-color 0.2s ease;
    background: white;
    color: #1a1a1a;
  }
  
  .form-input:focus,
  .form-textarea:focus {
    outline: none;
    border-color: #2563eb;
    box-shadow: 0 0 0 3px rgba(37, 99, 235, 0.1);
  }
  
  .form-textarea {
    resize: vertical;
    min-height: 120px;
  }
  
  .form-submit {
    grid-column: 1 / -1;
    text-align: center;
    margin-top: 12px;
  }
  
  .btn {
    display: inline-block;
    padding: 14px 28px;
    font-weight: 600;
    font-size: 16px;
    border-radius: 6px;
    text-decoration: none;
    transition: all 0.2s ease;
    border: none;
    cursor: pointer;
    font-family: inherit;
  }
  
  .btn--primary {
    background: #2563eb;
    color: white;
  }
  
  .btn--primary:hover {
    background: #1d4ed8;
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(37, 99, 235, 0.25);
  }
  
  .form-success {
    background: #d1fae5;
    color: #065f46;
    padding: 12px 16px;
    border-radius: 6px;
    margin-bottom: 20px;
    font-weight: 500;
  }
  
  .form-notice {
    background: #fef3c7;
    color: #92400e;
    padding: 12px 16px;
    border-radius: 6px;
    margin-bottom: 20px;
    font-weight: 500;
  }
  
  /* 响应式设计 */
  @media (max-width: 767px) {
    .hero-content {
      padding: 30px 20px;
    }
    
    .hero-title {
      font-size: 1.75rem;
    }
    
    .article-container {
      padding: 0 16px;
    }
    
    .prose {
      font-size: 17px;
    }
    
    .prose h1 { font-size: 1.75rem; }
    .prose h2 { font-size: 1.5rem; }
    .prose h3 { font-size: 1.25rem; }
    
    .nav-container {
      grid-template-columns: 1fr;
      text-align: center;
    }
    
    .nav-prev,
    .nav-next {
      text-align: center;
    }
    
    .form-grid {
      grid-template-columns: 1fr;
    }
    
    .comments-container {
      padding: 0 16px;
    }
    
    .comment-form-wrapper {
      padding: 24px;
    }
  }
  
  /* 深色模式支持 */
  @media (prefers-color-scheme: dark) {
    .article-wrapper {
      background: #ffffff;
      color: #1a1a1a;
    }
  }
</style>

{% schema %}
{
  "name": "Article pages",
  "class": "page-section-spacing",
  "settings": [
    {
      "type": "checkbox",
      "id": "show_date",
      "label": "Show date",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_author",
      "label": "Show author",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_article_tags",
      "label": "Show article tags",
      "default": true
    },
    {
      "type": "header",
      "content": "Sharing"
    },
    {
      "type": "checkbox",
      "id": "show_sharing_icons",
      "label": "Show social sharing icons",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_twitter",
      "label": "Show X (formerly Twitter)",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_facebook",
      "label": "Show Facebook",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_pinterest",
      "label": "Show Pinterest",
      "default": true
    },
    {
      "type": "header",
      "content": "Featured image"
    },
    {
      "type": "checkbox",
      "id": "show_featured_image",
      "label": "Show featured image",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "full_width_image",
      "label": "Full width",
      "default": true
    },
    {
      "type": "select",
      "id": "featured_image_height",
      "label": "Height",
      "options": [
        {
          "value": "small",
          "label": "Compact"
        },
        {
          "value": "medium",
          "label": "Small"
        },
        {
          "value": "large",
          "label": "Medium"
        },
        {
          "value": "huge",
          "label": "Large"
        },
        {
          "value": "natural",
          "label": "Natural"
        }
      ],
      "default": "huge"
    },
    {
      "type": "checkbox",
      "id": "enable_title_overlay",
      "label": "Show title over featured image",
      "default": false
    },
    {
      "id": "overlay_style",
      "type": "select",
      "label": "Overlay style",
      "default": "shadow",
      "options": [
        {
          "value": "full",
          "label": "Tint"
        },
        {
          "value": "box",
          "label": "Box"
        },
        {
          "value": "shadow",
          "label": "Text shadow"
        },
        {
          "value": "full image-overlay--bg-shadow",
          "label": "Text shadow and tint"
        },
        {
          "value": "no_background",
          "label": "No background"
        }
      ]
    }
  ]
}
{% endschema %}