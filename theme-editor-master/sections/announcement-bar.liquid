{%- comment -%}
  ANNOUNCEMENT BAR SECTION
  
  This section creates a customizable announcement bar that appears at the top of the website,
  providing dynamic content rotation, multilingual support, and interactive features.
  
  MAIN FEATURES:
  - Multiple announcement blocks with automatic rotation capability
  - Comprehensive multilingual support (English, German, French)
  - Interactive countdown timer functionality with customizable display
  - Advanced styling with color and gradient options
  - Social media icons integration
  - Language and country selector with enhanced UI
  - Responsive design with mobile-specific behavior
  - Custom announcement buttons with hover effects and animations
  - Navigation controls for manual announcement switching
  - Dynamic background switching for different announcements
  
  LAYOUT STRUCTURE:
  - Left section: Social media icons (desktop only)
  - Middle section: Announcement text, countdown timer, and action buttons
  - Right section: Navigation menu and language/country selectors (desktop only)
  
  STYLING FEATURES:
  - CSS variables for dynamic theming and color management
  - Flexbox layout for proper alignment and responsive behavior
  - Smooth transitions and hover effects for interactive elements
  - Mobile-responsive button hiding and layout adjustments
  - Custom SVG arrow icons with transform animations
  - Gradient background support with opacity controls
  
  CUSTOMIZATION OPTIONS:
  - Background colors and gradients (global and per-block)
  - Text colors and font sizes with responsive scaling
  - Button styling, colors, and hover states
  - Countdown timer display options and separator styles
  - Social media and menu integration settings
  - Animation and transition controls
  
  MULTILINGUAL SUPPORT:
  - Dynamic text switching based on locale (English, German, French)
  - Localized button text and announcement content
  - Country-specific flag displays in language switcher
  - Fallback content for unsupported languages
  
  COUNTDOWN TIMER FEATURES:
  - Configurable end date and time
  - Multiple separator styles (box, dash, dot, space)
  - Font selection (base or heading font)
  - Auto-hide functionality when timer expires
  - Real-time updates with JavaScript integration
  
  RESPONSIVE DESIGN:
  - Mobile-first approach with progressive enhancement
  - Tablet-specific layout adjustments for long announcements
  - Desktop-only elements (social icons, language switcher)
  - Adaptive font sizes and spacing
  
  PERFORMANCE CONSIDERATIONS:
  - Deferred JavaScript loading for countdown functionality
  - CSS-only animations for better performance
  - Conditional rendering to reduce DOM complexity
  - Optimized asset loading
  
  ACCESSIBILITY FEATURES:
  - ARIA labels for navigation buttons
  - Semantic HTML structure
  - Keyboard navigation support
  - Screen reader friendly content
  
  RELATED FILES AND DEPENDENCIES:
  
  JavaScript Assets:
  - assets/countdown-timer.js - Countdown timer functionality and real-time updates
  
  Liquid Snippets:
  - snippets/animation-attrs.liquid - Animation attribute management for sections
  - snippets/enhanced-language-switcher.liquid - Advanced language and country selector with flag icons
  - snippets/sharing-block.liquid - Social sharing functionality (contains social-share rendering)
  
  Note: The following snippets are referenced but may be defined inline or in theme core:
  - 'social-media' - Social media icons rendering (referenced but file not found in snippets)
  - 'icon-chevron-left' - Left navigation arrow icon (referenced but file not found in snippets)
  - 'icon-chevron-right' - Right navigation arrow icon (referenced but file not found in snippets)
  - 'countdown-timer' - Countdown display component (referenced but file not found in snippets)
  
  Layout Dependencies:
  - layout/theme.liquid - Contains doc-head-social rendering for social meta tags
  
  External Dependencies:
  - Shopify theme settings (social media configuration, language settings)
  - Shopify localization system for country/language detection
  - Shopify link lists for navigation menu integration
  - Browser localStorage for potential announcement state management
  
  Schema Configuration:
  - Section-level settings for colors, fonts, and display options
  - Block-level settings for individual announcements
  - Multilingual text fields for each supported language
  - Countdown timer configuration options
  - Social media and navigation integration settings
{%- endcomment -%}

{% if section.blocks.size > 0 or section.settings.enable_language_selector or section.settings.enable_country_selector or section.settings.menu != blank %}
  {%- liquid
    assign longest_announcement = 0
    assign number_of_blocks = 0
    for block in section.blocks
      assign number_of_blocks = number_of_blocks | plus: 1
      assign text = block.settings.text | strip_html
      if text.size > longest_announcement
        assign longest_announcement = text.size
      endif
    endfor
  -%}
  
  <announcement-bar 
    id="section-id-{{ section.id }}" 
    class="announcement-bar
      {%- if section.blocks.size > 0 %} announcement-bar--with-announcement{% endif -%}
      {%- if longest_announcement > 45 and section.settings.menu != blank %} announcement-bar--tablet-wrap{% endif -%}"
    {%- render 'animation-attrs', attrs: 'data-cc-animate' -%}>
    
    {% style %}
      {%- liquid
        assign bg_color = section.settings.announcement_bar_col
        assign bg_gradient = section.settings.announcement_bar_gradient
        assign text_color = section.settings.announcement_text_col
        if section.blocks.size > 0 and section.blocks.first.settings.use_custom_colors
          assign bg_color = section.blocks.first.settings.bg_color
          assign bg_gradient = section.blocks.first.settings.bg_gradient
          assign text_color = section.blocks.first.settings.text_color
        endif
      -%}
      #section-id-{{ section.id }} {
        --bg-color: {{ bg_color }};
        --bg-gradient: {{ bg_gradient }};
        --heading-color: {{ text_color.rgb }};
        --text-color: {{ text_color.rgb }};
        --link-color: {{ text_color.rgb }};
        --announcement-font-size: {{ section.settings.message_font_size }}px;
      }
      
      .announcement__text {
        display: flex;
        align-items: center;
        justify-content: center;
        flex-wrap: wrap;
        gap: 8px;
      }
      
      .announcement-text-link {
        text-decoration: none;
        color: inherit;
        display: inline-flex;
        align-items: center;
      }
      
      .custom-announcement-button {
        background-color: var(--button-bg-color, #000);
        color: white;
        margin-left: 20px;
        text-decoration: none;
        padding: 6px 10px;
        font-size: 12px;
        border-radius: 4px;
        display: inline-flex;
        align-items: center;
        transition: all 0.3s ease;
        position: relative;
        overflow: hidden;
      }
      
      .custom-announcement-button:hover {
        transform: translateY(-1px);
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        background-color: var(--button-bg-color-hover, #333);
      }
      
      .custom-announcement-button:hover .arrow-icon {
        transform: translateX(2px);
      }
      
      .custom-announcement-button:active {
        transform: translateY(0);
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
      }
      
      @media (max-width: 767px) {
        .custom-announcement-button {
          display: none;
        }
      }
      
      .custom-announcement-button .arrow-icon {
        display: inline-block;
        margin-left: 5px;
        vertical-align: middle;
        transition: transform 0.3s ease;
      }
      
      .announcement-text-link {
        text-decoration: none;
        margin-left: 8px;
        color: inherit;
      }
      
      .announcement-bar a,
      .announcement-bar__link,
      .inline-menu__link {
        text-decoration: none;
      }
      
      .announcement-bar a:hover,
      .announcement-bar__link:hover,
      .inline-menu__link:hover {
        text-decoration: none;
      }
      
      .announcement-bg {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        z-index: -1;
      }
      
      .announcement-bg--inactive {
        opacity: 0;
      }
    {% endstyle %}

    {%- for block in section.blocks offset: 1 -%}
      <div class="announcement-bg announcement-bg--inactive"
           data-index="{{ forloop.index }}"
           style="background:
             {%- if block.settings.use_custom_colors %}
               {{- block.settings.bg_gradient | default: block.settings.bg_color }}
             {%- else %}
               {{- section.settings.announcement_bar_gradient | default: section.settings.announcement_bar_col }}
             {%- endif -%}"></div>
    {%- endfor -%}

    <div class="container container--no-max relative">
      <div class="announcement-bar__left desktop-only">
        {% if section.settings.show_social_icons %}
          {%- render 'social-media', icon: settings.social_custom_icon, icon_height: 20 -%}
        {% endif %}
      </div>

      <div class="announcement-bar__middle">
        {%- if section.blocks.size > 0 -%}
          <div class="announcement-bar__announcements">
            {%- for block in section.blocks -%}
              {%- liquid
                if block.settings.show_countdown
                  assign now = "now" | date: '%Y-%m-%dT%H:%M'
                  if block.settings.end_date != blank
                    assign end_date = block.settings.end_date
                    if block.settings.end_time != blank
                      assign end_date = end_date | append: 'T' | append: block.settings.end_time
                    endif
                    assign end_date = end_date | date: '%Y-%m-%dT%H:%M'
                  else
                    assign now_split = now | split: "T"
                    assign end_date = now_split.first | append: "T23:59" | date: '%Y-%m-%dT%H:%M'
                  endif

                  if block.settings.hide_on_end and end_date < now
                    continue
                  endif
                endif
                
                assign announcement_text = block.settings.text
                assign button_text = block.settings.unique_button_text
                
                if request.locale.iso_code == 'de'
                  if block.settings.text_de != blank
                    assign announcement_text = block.settings.text_de
                  endif
                  if block.settings.unique_button_text_de != blank
                    assign button_text = block.settings.unique_button_text_de
                  endif
                elsif request.locale.iso_code == 'fr'
                  if block.settings.text_fr != blank
                    assign announcement_text = block.settings.text_fr
                  endif
                  if block.settings.unique_button_text_fr != blank
                    assign button_text = block.settings.unique_button_text_fr
                  endif
                endif
              -%}
              
              <div class="announcement{% if first_announcement_found %} announcement--inactive{% endif %}"
                   style="
                     {%- if block.settings.use_custom_colors %}
                       --heading-color: {{ block.settings.text_color.rgb }};
                       --text-color: {{ block.settings.text_color.rgb }};
                       --link-color: {{ block.settings.text_color.rgb }};
                       --button-bg-color: {{ block.settings.unique_button_color }};
                     {%- else -%}
                       --heading-color: {{ section.settings.announcement_text_col.rgb }};
                       --text-color: {{ section.settings.announcement_text_col.rgb }};
                       --link-color: {{ section.settings.announcement_text_col.rgb }};
                       --button-bg-color: {{ block.settings.unique_button_color }};
                     {%- endif %}"
                   {{ block.shopify_attributes }}>
                
                {%- assign first_announcement_found = true -%}
                
                <div class="announcement__text">
                  {% if block.settings.show_countdown and end_date > now %}
                    <script src="{{ 'countdown-timer.js' | asset_url }}" defer></script>
                    <span class="countdown-font-{{ block.settings.number_font }} announcement-text-separation-{{ block.settings.countdown_separator }}">
                      {% render 'countdown-timer',
                        end_date: block.settings.end_date,
                        end_time: block.settings.end_time,
                        end_midnight: true,
                        hide_on_end: true,
                        show_labels: true %}
                    </span>
                  {% endif %}

                  <a href="{{ block.settings.unique_button_link }}" class="announcement-text-link">
                    {{ announcement_text }}
                  </a>

                  <a href="{{ block.settings.unique_button_link }}" 
                     class="custom-announcement-button"
                     data-localize="{{ block.settings.unique_button_text }}">
                    {{ button_text }}
                    <svg class="arrow-icon" width="12" height="12" viewBox="0 0 24 24" fill="currentColor">
                      <path d="M8.59 16.59L13.17 12L8.59 7.41L10 6l6 6-6 6-1.41-1.41z"/>
                    </svg>
                  </a>
                </div>
              </div>
            {%- endfor -%}
          </div>
          
          <div class="announcement-bar__announcement-controller">
            <button class="announcement-button announcement-button--previous" 
                    aria-label="{{ 'general.slider.previous' | t | escape }}">
              {% render 'icon-chevron-left' %}
            </button>
            <button class="announcement-button announcement-button--next" 
                    aria-label="{{ 'general.slider.next' | t | escape }}">
              {% render 'icon-chevron-right' %}
            </button>
          </div>
        {%- endif -%}
      </div>

      <div class="announcement-bar__right desktop-only">
        {% if section.settings.menu != blank %}
          <span class="inline-menu">
            {% for link in linklists[section.settings.menu].links %}
              <a class="inline-menu__link announcement-bar__link" href="{{ link.url }}">
                {{ link.title }}
              </a>
            {% endfor %}
          </span>
        {% endif %}
        
        {% render 'enhanced-language-switcher', 
           enable_language_selector: section.settings.enable_language_selector, 
           enable_country_selector: section.settings.enable_country_selector,
           show_border: true,
           button_size: 'normal',
           margin_bottom: '0',
           css_scope: 'announcement-bar' %}
      </div>
    </div>
  </announcement-bar>
{%- endif -%}

{% schema %}
{
  "name": "Announcement bar",
  "class": "section-announcement-bar",
  "settings": [
    {
      "type": "range",
      "id": "message_font_size",
      "min": 11,
      "max": 18,
      "step": 1,
      "unit": "px",
      "label": "Announcement font size",
      "default": 14
    },
    {
      "type": "color",
      "id": "announcement_bar_col",
      "label": "Background color",
      "default": "#4a4a4a"
    },
    {
      "type": "color_background",
      "id": "announcement_bar_gradient",
      "label": "Background gradient (optional)"
    },
    {
      "type": "color",
      "id": "announcement_text_col",
      "label": "Text color",
      "default": "#ffffff"
    },
    {
      "type": "header",
      "content": "Links"
    },
    {
      "type": "paragraph",
      "content": "Links, social media icons, and localization options will show in the menu on mobile"
    },
    {
      "type": "checkbox",
      "id": "show_social_icons",
      "label": "Show social media links",
      "default": true
    },
    {
      "type": "link_list",
      "id": "menu",
      "label": "Menu",
      "info": "This menu won't show dropdown items"
    },
    {
      "type": "header",
      "content": "Country/Region Selector",
      "info": "To add a country/region, go to your [payment settings.](/admin/settings/payments)"
    },
    {
      "type": "checkbox",
      "id": "enable_country_selector",
      "label": "Enable country/region selector",
      "default": true
    },
    {
      "type": "header",
      "content": "Language Selector",
      "info": "To add a language, go to your [language settings.](/admin/settings/languages)"
    },
    {
      "type": "checkbox",
      "id": "enable_language_selector",
      "label": "Enable language selector",
      "default": true
    }
  ],
  "blocks": [
    {
      "type": "announcement",
      "name": "Announcement",
      "settings": [
        {
          "type": "inline_richtext",
          "id": "text",
          "label": "Text (English - Default)"
        },
        {
          "type": "inline_richtext",
          "id": "text_de",
          "label": "Text (German)"
        },
        {
          "type": "inline_richtext",
          "id": "text_fr",
          "label": "Text (French)"
        },
        {
          "type": "url",
          "id": "unique_button_link",
          "label": "Button Link"
        },
        {
          "type": "text",
          "id": "unique_button_text",
          "label": "Button Text (English - Default)"
        },
        {
          "type": "text",
          "id": "unique_button_text_de",
          "label": "Button Text (German)"
        },
        {
          "type": "text",
          "id": "unique_button_text_fr",
          "label": "Button Text (French)"
        },
        {
          "type": "color",
          "id": "unique_button_color",
          "label": "Button Color",
          "default": "#000000"
        },
        {
          "type": "header",
          "content": "Countdown timer"
        },
        {
          "type": "checkbox",
          "id": "show_countdown",
          "label": "Show countdown timer",
          "default": false
        },
        {
          "type": "checkbox",
          "id": "hide_on_end",
          "label": "Hide the announcement when the date and time elapses",
          "default": false
        },
        {
          "type": "text",
          "id": "end_date",
          "label": "End date",
          "info": "Required. Format: YYYY-MM-DD."
        },
        {
          "type": "text",
          "id": "end_time",
          "label": "End time (optional)",
          "info": "Format: 17:00 (24 hour clock). Uses the store's timezone."
        },
        {
          "type": "select",
          "id": "number_font",
          "label": "Number font",
          "options": [
            {
              "label": "Text font",
              "value": "base"
            },
            {
              "label": "Heading font",
              "value": "heading"
            }
          ],
          "default": "base"
        },
        {
          "type": "select",
          "id": "countdown_separator",
          "label": "Separation style",
          "options": [
            {
              "label": "Box",
              "value": "box"
            },
            {
              "label": "Dash",
              "value": "dash"
            },
            {
              "label": "Dot",
              "value": "dot"
            },
            {
              "label": "Space",
              "value": "space"
            }
          ],
          "default": "box"
        },
        {
          "type": "header",
          "content": "Style"
        },
        {
          "type": "checkbox",
          "id": "use_custom_colors",
          "label": "Use custom colors",
          "default": false
        },
        {
          "type": "color",
          "id": "bg_color",
          "label": "Background color",
          "default": "#4a4a4a"
        },
        {
          "type": "color_background",
          "id": "bg_gradient",
          "label": "Background gradient (optional)"
        },
        {
          "type": "color",
          "id": "text_color",
          "label": "Text color",
          "default": "#ffffff"
        }
      ]
    }
  ]
}
{% endschema %}