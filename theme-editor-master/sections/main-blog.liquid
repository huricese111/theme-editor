{%- comment -%}
/**
 * Main Blog Section - Blog Listing and Article Display Component
 * 
 * This section provides a comprehensive blog listing page with customizable
 * layout options, article previews, and social sharing functionality.
 * 
 * FEATURES:
 * - JavaScript-based pagination (12 articles per page)
 * - Multiple layout options (list and grid/columns)
 * - Article image display with customizable aspect ratios
 * - Article excerpts with automatic truncation
 * - Author and publication date display
 * - Article tags with filtering links
 * - **Category filtering based on custom.post_category metafield**
 * - Social sharing integration (Twitter, Facebook)
 * - RSS feed link support
 * - Responsive design with mobile optimization
 * 
 * LAYOUT OPTIONS:
 * - List layout: Full-width articles in vertical stack
 * - Grid layout: Multi-column card-based display
 * - Customizable image aspect ratios (natural, portrait, square, landscape, wide)
 * 
 * ARTICLE METADATA:
 * - Publication date with time tag formatting
 * - Author information display
 * - Tag-based categorization and filtering
 * - **Category-based filtering using metafields**
 * - Excerpt display with fallback to content truncation
 * 
 * SOCIAL FEATURES:
 * - Twitter (X) sharing integration
 * - Facebook sharing functionality
 * - RSS feed subscription link
 * - Social share heading customization
 * 
 * CUSTOMIZATION OPTIONS:
 * - Toggle page title display
 * - Show/hide author information
 * - Show/hide publication dates
 * - Show/hide article excerpts
 * - Show/hide article tags
 * - **Enable/disable category filtering**
 * - Enable/disable social sharing options
 * 
 * RESPONSIVE BEHAVIOR:
 * - Mobile-first design approach
 * - Adaptive image sizing with srcset
 * - Progressive loading for performance
 * - Touch-friendly navigation
 * 
 * TECHNICAL FEATURES:
 * - JavaScript-based pagination with all articles loaded
 * - Lazy loading for images (except first few)
 * - CSS Grid and Flexbox layouts
 * - Animation attributes integration
 * - SEO-optimized markup
 * - **Client-side category filtering with JavaScript**
 * 
 * STYLING:
 * - Custom CSS for card-based grid layout
 * - Rounded corners and borders
 * - Text truncation with ellipsis
 * - Consistent spacing and typography
 * 
 * DEPENDENCIES:
 * - social-share snippet
 * - image snippet for responsive images
 * - animation-attrs snippet
 * 
 * BROWSER SUPPORT:
 * - Modern browsers with CSS Grid support
 * - Progressive enhancement for older browsers
 * - Mobile-responsive design
 */
{%- endcomment -%}

<div class="container">
  {% if section.settings.show_page_title %}
    <div class="page-header" {%- render 'animation-attrs', attrs: 'data-cc-animate' -%}>
      <h4 class="majortitle">{{ blog.title }}</h4>
    </div>
  {% endif %}

  <!-- Category Filter Section -->
  {% if section.settings.show_category_filter %}
    <div class="category-filter-section" {%- render 'animation-attrs', attrs: 'data-cc-animate' -%}>
      <div class="category-filter-container">
        {% comment %} Mobile toggle button {% endcomment %}
        <div class="category-filter-header">
          <button class="category-filter-toggle mobile-only" aria-expanded="false" aria-controls="category-filter-buttons">
            <span class="toggle-text">
              {% case request.locale.iso_code %}
                {% when 'de' %}
                  Filter anzeigen
                {% when 'fr' %}
                  Afficher les filtres
                {% when 'fi' %}
                  Näytä suodattimet
                {% else %}
                  Show filters
              {% endcase %}
            </span>
            <svg class="toggle-icon" width="16" height="16" viewBox="0 0 16 16" fill="none">
              <path d="M4 6L8 10L12 6" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            </svg>
          </button>
        </div>
        <div class="category-filter-buttons" id="category-filter-buttons">
          <button class="category-filter-btn active" data-category="all">
            {% comment %} Multi-language "All Articles" button {% endcomment %}
            {% case request.locale.iso_code %}
              {% when 'de' %}
                Alle Artikel
              {% when 'fr' %}
                Tous les articles
              {% when 'fi' %}
                Kaikki artikkelit
              {% else %}
                All Articles
            {% endcase %}
          </button>
          <button class="category-filter-btn" data-category="Awards & Test Results">
            {% case request.locale.iso_code %}
              {% when 'de' %}
                Auszeichnungen & Testergebnisse
              {% when 'fr' %}
                Prix & Tests
              {% when 'fi' %}
                Palkinnot & Testitulokset
              {% else %}
                Awards & Test Results
            {% endcase %}
          </button>
          <button class="category-filter-btn" data-category="E-Bike Guides & Tips">
            {% case request.locale.iso_code %}
              {% when 'de' %}
                E-Bike Ratgeber & Tipps
              {% when 'fr' %}
                Guides & Conseils
              {% when 'fi' %}
                E-pyörä oppaat & vinkit
              {% else %}
                E-Bike Guides & Tips
            {% endcase %}
          </button>
          <button class="category-filter-btn" data-category="Hepha News & Stories">
            {% case request.locale.iso_code %}
              {% when 'de' %}
                Hepha Neuigkeiten & Geschichten
              {% when 'fr' %}
                Actualités & Histoires
              {% when 'fi' %}
                Hepha uutiset & tarinat
              {% else %}
                Hepha News & Stories
            {% endcase %}
          </button>
        </div>
      </div>
    </div>
  {% endif %}

  <div class="utility-bar" {%- render 'animation-attrs', attrs: 'data-cc-animate' -%}>
    {% if section.settings.show_twitter or section.settings.show_facebook or section.settings.show_rss_icon %}
      <div class="utility-bar__right" {%- render 'animation-attrs', attrs: 'data-cc-animate' -%}>
        {% if section.settings.show_twitter or section.settings.show_facebook %}
          <span class="utility-bar__item desktop-only">
            <div class="social-share flex items-center">
              <p class="social-share__heading">{{ 'general.social.share_heading' | t }}</p>
              {% render 'social-share',
                share_twitter: section.settings.show_twitter,
                share_facebook: section.settings.show_facebook,
                share_title: blog.title,
                share_url: blog.url
              %}
            </div>
          </span>
        {% endif %}
      </div>
    {% endif %}
  </div>
</div>

{% if section.settings.layout == 'columns' %}<div class="container">{% endif %}

<div class="article-list article-layout--{{ section.settings.layout }}" id="article-list">
  {% for article in blog.articles %}
    {% assign article_category = article.metafields.custom.post_category.value | default: 'Uncategorized' %}
    <div class="article" data-category="{{ article_category }}" {%- render 'animation-attrs', attrs: 'data-cc-animate', always: true -%}>
      <div class="article__inner {% if section.settings.layout != 'columns' %}container container--reading-width{% endif %}">
        {% if article.image %}
          <div class="article-image">
            <a href="{{ article.url }}">
              {%- liquid
                assign loading = 'lazy'
                if section.settings.layout == 'columns'
                  if forloop.index < 4
                    assign loading = 'eager'
                  endif
                  render 'image' with article.image, sizes: '(min-width: 1024px) 440px, (min-width: 768px) 50vw, 100vw', custom_aspect_ratio: section.settings.crop_ratio, loading: loading

                else
                  if forloop.first
                    assign loading = 'eager'
                  endif
                  render 'image' with article.image, sizes: '(min-width: 768px) 740px, 100vw', custom_aspect_ratio: section.settings.crop_ratio, loading: loading
                endif
              -%}
            </a>
            <img
              src="{{ article.image | img_url: '2048x2048' }}"
              srcset="{{ article.image | img_url: '1024x1024' }} 1024w, {{ article.image | img_url: '2048x2048' }} 2048w, {{ article.image | img_url: 'original' }} 1000w"
              sizes="(min-width: 768px) 740px, 100vw"
              loading="{{ loading }}"
              alt="{{ article.image.alt | escape }}"
              style="display: none;"
            >
          </div>
        {% endif %}

        <div class="article-description">
          <h5>{{ article.title | escape | link_to: article.url }}</h5>

          {%- if section.settings.show_excerpts -%}
            <div class="rte cf">
              {%- if article.excerpt.size > 0 -%}
                {{ article.excerpt }}
              {%- else -%}
                {{ article.content | strip_html | truncatewords: 30 }}
              {%- endif -%}
            </div>
          {%- endif -%}

          <div class="meta">
            <span class="iconmeta time">
              {% if section.settings.show_date %}
                {{ article.published_at | time_tag: format: 'date' }}
              {% endif %}
              {% if section.settings.show_author %}
                {% if section.settings.show_date %}&mdash;{% endif %}
                <span class="author">{{ article.author }}</span>
              {% endif %}
            </span>

            <!-- Display Category -->
            {% if section.settings.show_category and article_category != 'Uncategorized' %}
              <div class="iconmeta category">
                <span class="label">
                  {% comment %} Multi-language "Category" label {% endcomment %}
                  {% case request.locale.iso_code %}
                    {% when 'de' %}
                      Kategorie
                    {% when 'fr' %}
                      Catégorie
                    {% when 'fi' %}
                      Kategoria
                    {% else %}
                      Category
                  {% endcase %}:
                </span>
                <span class="category-tag">{{ article_category }}</span>
              </div>
            {% endif %}

            {% if section.settings.show_article_tags %}
              {% capture tag_markup %}
      <div class="iconmeta tags">
        <span class="label">{{ 'blogs.tags.label' | t }}:</span>
        {% for tag in article.tags %}
          {{ tag | link_to_tag: tag }}
        {% endfor %}
      </div>
      {% endcapture %}
              {% if tag_markup contains '</a>' %}{{ tag_markup }}{% endif %}
            {% endif %}
          </div>
        </div>
      </div>
    </div>

  {% else %}
    <div class="container">
      <h5 class="align-centre fully-spaced-row">{{ 'blogs.article.no_matches' | t }}</h5>
    </div>
  {% endfor %}
</div>

{% if section.settings.layout == 'columns' %}</div>{% endif %}

<div class="container pagination-row">
  <nav id="pagination-control" class="pagination dynamic-pagination" role="navigation" aria-label="Pagination Navigation">
    <!-- Pagination will be generated by JavaScript -->
  </nav>
</div>

<style>
  .title,
  .majortitle {
    margin: 60px 0 1.25rem !important;
  }

  .article-list.article-layout--columns .article,
  .article-list.article-layout--columns .article:nth-child(2n) {
    border-right: none;
  }

  .article-list.article-layout--columns .article__inner {
    border: 1px solid #d2d2d2;
    border-radius: 12px;
  }

  .article-description {
    padding: 20px;
  }

  .img-ar img {
    border-radius: 12px 12px 0 0;
  }

  .article-list.article-layout--columns .article {
    padding: 0 10px;
  }

  .article-description .rte {
    display: -webkit-box;
    -webkit-line-clamp: 4;
    -webkit-box-orient: vertical;
    overflow: hidden;
    line-height: 1.5;
    max-height: 6em;
  }

  /* Category Filter Styles */
  .category-filter-section {
    margin: 0;
    padding: 0;
  }

  .category-filter-container {
    text-align: center;
  }

  .category-filter-header {
    display: flex;
    align-items: center;
    justify-content: space-between;
  }

  .category-filter-title {
    margin: 0;
    font-size: 18px;
    font-weight: 600;
    color: #333;
  }

  .category-filter-toggle {
    display: none;
    align-items: center;
    gap: 8px;
    background: transparent;
    border: 1px solid #ddd;
    border-radius: 20px;
    padding: 8px 12px;
    font-size: 14px;
    color: #666;
    cursor: pointer;
    transition: all 0.3s ease;
  }

  .category-filter-toggle:hover {
    background: #f8f8f8;
    border-color: #bbb;
  }

  .toggle-icon {
    transition: transform 0.3s ease;
  }

  .category-filter-toggle[aria-expanded="true"] .toggle-icon {
    transform: rotate(180deg);
  }

  .category-filter-buttons {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: 10px;
  }

  .mobile-only {
    display: none;
  }

  /* Mobile responsive styles */
  @media (max-width: 768px) {
    .mobile-only {
      display: flex;
    }
    
    .desktop-only {
      display: none;
    }
    
    .category-filter-header {
      text-align: left;
      justify-content: center;
    }
    
    .category-filter-title {
      font-size: 16px;
    }
    
    .category-filter-buttons {
      display: none;
      margin-top: 15px;
      justify-content: flex-start;
      gap: 8px;
    }
    
    .category-filter-buttons.expanded {
      display: flex;
    }
    
    .category-filter-btn {
      font-size: 13px;
      padding: 8px 16px;
    }
  }

  .mobile-only {
    display: none;
  }

  @media (max-width: 768px) {
    .mobile-only {
      display: block;
    }
    
    .desktop-only {
      display: none;
    }
  }
  .category-filter-btn {
    background: #f8f8f8;
    border: 2px solid #ddd;
    border-radius: 25px;
    padding: 10px 20px;
    font-size: 14px;
    font-weight: 500;
    color: #666;
    cursor: pointer;
    transition: all 0.3s ease;
    white-space: nowrap;
  }

  .category-filter-btn:hover {
    background: #e8e8e8;
    border-color: #bbb;
  }

  .category-filter-btn.active {
    background: #007acc;
    border-color: #007acc;
    color: white;
  }

  .category-tag {
    background: #f0f0f0;
    padding: 4px 8px;
    border-radius: 12px;
    font-size: 12px;
    color: #666;
  }

  .iconmeta.category {
    margin-top: 8px;
  }

  .iconmeta.category .label {
    font-weight: 600;
    margin-right: 5px;
  }

  /* Article hiding for filtering */
  .article.hidden {
    display: none;
  }

  /* Dynamic Pagination Styles */
  .dynamic-pagination {
    display: flex;
    justify-content: center;
    align-items: center;
    margin: 2rem 0;
  }

  .dynamic-pagination .pagination__inner {
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }

  .dynamic-pagination .pagination__item {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    min-width: 2.5rem;
    height: 2.5rem;
    padding: 0.5rem;
    text-decoration: none;
    color: #374151;
    border: 1px solid #d1d5db;
    border-radius: 0.375rem;
    font-size: 0.875rem;
    font-weight: 500;
    transition: all 0.2s ease;
    background: white;
    cursor: pointer;
  }

  .dynamic-pagination .pagination__item:hover:not(.pagination__item--disabled):not(.pagination__number--current) {
    background-color: #f9fafb;
    border-color: #9ca3af;
    transform: translateY(-1px);
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  }

  .dynamic-pagination .pagination__number--current {
    background-color: #007acc;
    border-color: #007acc;
    color: white;
  }

  .dynamic-pagination .pagination__item--disabled {
    color: #9ca3af;
    cursor: not-allowed;
    opacity: 0.6;
    background-color: #f9fafb;
  }

  .dynamic-pagination .pagination__numbers {
    display: flex;
    align-items: center;
    gap: 0.25rem;
  }

  /* Hide original pagination when using dynamic pagination */
  .pagination-row:has(.dynamic-pagination) .pagination:not(.dynamic-pagination) {
    display: none;
  }

  /* Mobile responsive */
  @media (max-width: 768px) {
    .category-filter-buttons {
      flex-direction: column;
      align-items: center;
    }
    
    .category-filter-btn {
      width: 100%;
      max-width: 280px;
    }

    /* Add spacing between articles on mobile */
    .article-list .article {
      margin-bottom: 20px;
    }
    
    .article-list.article-layout--columns .article {
      padding: 0 5px;
      margin-bottom: 25px;
    }
    
    .article-list.article-layout--list .article {
      margin-bottom: 30px;
    }
    
    /* Ensure proper spacing for the last article */
    .article-list .article:last-child {
      margin-bottom: 0;
    }

    .dynamic-pagination .pagination__item {
      min-width: 2rem;
      height: 2rem;
      font-size: 0.75rem;
    }
    
    .dynamic-pagination .pagination__prev-text,
    .dynamic-pagination .pagination__next-text {
      display: none;
    }
    
    .dynamic-pagination .pagination__prev::after {
      content: '‹';
    }
    
    .dynamic-pagination .pagination__next::after {
      content: '›';
    }
  }
</style>

<!-- Category Filter JavaScript -->
<script>
  // Category filtering and mobile toggle functionality
  document.addEventListener('DOMContentLoaded', function() {
    const filterButtons = document.querySelectorAll('.category-filter-btn');
    const articles = document.querySelectorAll('.article[data-category]');
    const paginationControl = document.getElementById('pagination-control');
    
    // Configuration
    const articlesPerPage = 12; // Match the Liquid pagination setting
    let currentPage = 1;
    let currentCategory = 'all';
    
    if (filterButtons.length === 0 || articles.length === 0) return;
    
    // Initialize pagination
    initializeDynamicPagination();
    
    filterButtons.forEach(button => {
      button.addEventListener('click', function() {
        const selectedCategory = this.getAttribute('data-category');
        currentCategory = selectedCategory;
        currentPage = 1; // Reset to first page when filtering
        
        // Update active button
        filterButtons.forEach(btn => btn.classList.remove('active'));
        this.classList.add('active');
        
        // Filter and paginate articles
        filterAndPaginateArticles();
        
        // Trigger animation for visible articles
        setTimeout(() => {
          const visibleArticles = document.querySelectorAll('.article:not(.hidden)');
          visibleArticles.forEach((article, index) => {
            article.style.animationDelay = (index * 0.1) + 's';
          });
        }, 50);
      });
    });
    
    function initializeDynamicPagination() {
      // Create pagination container if it doesn't exist
      if (!paginationControl) {
        const paginationRow = document.querySelector('.pagination-row');
        if (paginationRow) {
          const newPagination = document.createElement('nav');
          newPagination.id = 'pagination-control';
          newPagination.className = 'pagination dynamic-pagination';
          newPagination.setAttribute('role', 'navigation');
          newPagination.setAttribute('aria-label', 'Pagination Navigation');
          paginationRow.appendChild(newPagination);
        }
      }
      
      // Initial pagination setup
      filterAndPaginateArticles();
    }
    
    function filterAndPaginateArticles() {
      // Get filtered articles
      const filteredArticles = getFilteredArticles();
      const totalPages = Math.ceil(filteredArticles.length / articlesPerPage);
      
      // Hide all articles first
      articles.forEach(article => {
        article.classList.add('hidden');
        article.style.display = 'none';
      });
      
      // Show articles for current page
      const startIndex = (currentPage - 1) * articlesPerPage;
      const endIndex = startIndex + articlesPerPage;
      const articlesToShow = filteredArticles.slice(startIndex, endIndex);
      
      articlesToShow.forEach(article => {
        article.classList.remove('hidden');
        article.style.display = '';
      });
      
      // Update pagination
      updatePaginationControls(totalPages, filteredArticles.length);
    }
    
    function getFilteredArticles() {
      if (currentCategory === 'all') {
        return Array.from(articles);
      }
      
      return Array.from(articles).filter(article => {
        const articleCategory = article.getAttribute('data-category');
        return articleCategory === currentCategory;
      });
    }
    
    function updatePaginationControls(totalPages, totalArticles) {
      const pagination = document.getElementById('pagination-control') || 
                        document.querySelector('.pagination') ||
                        document.querySelector('.dynamic-pagination');
      
      if (!pagination) return;
      
     // Hide pagination if no articles
     if (totalPages === 0 || totalArticles === 0) {
      pagination.style.display = 'none';
      return;
    }
      
      pagination.style.display = 'flex';
      
      // Generate pagination HTML
      let paginationHTML = '<div class="pagination__inner">';
      
      // Previous button
      if (currentPage > 1) {
        paginationHTML += `<button class="pagination__item pagination__prev" onclick="changePage(${currentPage - 1})" aria-label="Previous page">
          <span class="pagination__prev-text">Previous</span>
        </button>`;
      } else {
        paginationHTML += `<span class="pagination__item pagination__prev pagination__item--disabled" aria-label="Previous page">
          <span class="pagination__prev-text">Previous</span>
        </span>`;
      }
      
      // Page numbers
      paginationHTML += '<div class="pagination__numbers">';
      
      for (let i = 1; i <= totalPages; i++) {
        if (i === currentPage) {
          paginationHTML += `<span class="pagination__item pagination__number pagination__number--current" aria-current="page" aria-label="Current page ${i}">${i}</span>`;
        } else {
          paginationHTML += `<button class="pagination__item pagination__number" onclick="changePage(${i})" aria-label="Go to page ${i}">${i}</button>`;
        }
      }
      
      paginationHTML += '</div>';
      
      // Next button
      if (currentPage < totalPages) {
        paginationHTML += `<button class="pagination__item pagination__next" onclick="changePage(${currentPage + 1})" aria-label="Next page">
          <span class="pagination__next-text">Next</span>
        </button>`;
      } else {
        paginationHTML += `<span class="pagination__item pagination__next pagination__item--disabled" aria-label="Next page">
          <span class="pagination__next-text">Next</span>
        </span>`;
      }
      
      paginationHTML += '</div>';
      
      pagination.innerHTML = paginationHTML;
    }
    
    // Global function for pagination clicks
    window.changePage = function(page) {
      currentPage = page;
      filterAndPaginateArticles();
      
      // Scroll to top of article list
      const articleList = document.getElementById('article-list');
      if (articleList) {
        articleList.scrollIntoView({ behavior: 'smooth', block: 'start' });
      }
    }

  // Mobile category filter toggle functionality
    const categoryToggle = document.querySelector('.category-filter-toggle');
    const categoryButtons = document.querySelector('.category-filter-buttons');
    const toggleText = categoryToggle?.querySelector('.toggle-text');
    
    if (categoryToggle && categoryButtons) {
      // Set up toggle text for different languages
      const locale = '{{ request.locale.iso_code }}';
      const showText = {
        'de': 'Filter anzeigen',
        'fr': 'Afficher les filtres', 
        'fi': 'Näytä suodattimet',
        'default': 'Show filters'
      };
      const hideText = {
        'de': 'Filter ausblenden',
        'fr': 'Masquer les filtres',
        'fi': 'Piilota suodattimet', 
        'default': 'Hide filters'
      };
      
      const currentShowText = showText[locale] || showText.default;
      const currentHideText = hideText[locale] || hideText.default;
      
      toggleText.textContent = currentShowText;
      
      categoryToggle.addEventListener('click', function() {
        const isExpanded = this.getAttribute('aria-expanded') === 'true';
        
        this.setAttribute('aria-expanded', !isExpanded);
        categoryButtons.classList.toggle('expanded', !isExpanded);
        
        // Update toggle text
        if (!isExpanded) {
          toggleText.textContent = currentHideText;
        } else {
          toggleText.textContent = currentShowText;
        }
      });
    }
  });
</script>

{% schema %}
{
  "name": "Blog pages",
  "class": "page-section-spacing",
  "settings": [
    {
      "type": "checkbox",
      "id": "show_page_title",
      "label": "Show page title",
      "default": true
    },
    {
      "type": "select",
      "id": "layout",
      "label": "Layout",
      "default": "columns",
      "options": [
        {
          "label": "List",
          "value": "list"
        },
        {
          "label": "Grid",
          "value": "columns"
        }
      ]
    },
    {
      "type": "select",
      "id": "crop_ratio",
      "label": "Image aspect ratio",
      "options": [
        {
          "value": "",
          "label": "Natural (no crop)"
        },
        {
          "value": "0.67",
          "label": "Portrait (2:3)"
        },
        {
          "value": "1.0",
          "label": "Square (1:1)"
        },
        {
          "value": "1.33",
          "label": "Landscape (4:3)"
        },
        {
          "value": "1.78",
          "label": "Wide (16:9)"
        }
      ],
      "default": "1.78"
    },
    {
      "type": "checkbox",
      "id": "show_author",
      "label": "Show author",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_date",
      "label": "Show date",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_excerpts",
      "label": "Show excerpt",
      "info": "Change excerpts by editing your blog posts. [Learn more](https://help.shopify.com/en/manual/online-store/blogs/writing-blogs#display-an-excerpt-from-a-blog-post)",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_article_tags",
      "label": "Show tags underneath articles",
      "default": true
    },
    {
      "type": "header",
      "content": "Category Filtering"
    },
    {
      "type": "checkbox",
      "id": "show_category_filter",
      "label": "Show category filter buttons",
      "info": "Enable category filtering based on custom.post_category metafield",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_category",
      "label": "Show category underneath articles",
      "default": true
    },
    {
      "type": "header",
      "content": "Sharing"
    },
    {
      "type": "checkbox",
      "id": "show_rss_icon",
      "label": "Show RSS feed link",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_twitter",
      "label": "Show X (formerly Twitter) sharing icon",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_facebook",
      "label": "Show Facebook sharing icon",
      "default": true
    }
  ]
}
{% endschema %}
