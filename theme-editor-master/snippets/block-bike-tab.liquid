{% style %}
#shopify-section-{{ section.id }} .column--content:has(.bike-tabs-block) .text-content-wrapper {
  padding: 10px !important;
  max-width: 800px !important;
}

#shopify-section-{{ section.id }} .banner-header {
  display: flex;
  flex-direction: column;
  align-items: flex-end;
  position: absolute;
  top: 0;
  right: 0;
  z-index: 10;
  padding: 15px;
}

#shopify-section-{{ section.id }} .sub-tabs-container {
  display: flex;
  justify-content: flex-end;
  width: 100%;
}

#shopify-section-{{ section.id }} .banner-tab-content {
  position: relative;
  min-height: 300px;
}

#shopify-section-{{ section.id }} .sub-content {
  position: relative;
  height: 300px;
}

#shopify-section-{{ section.id }} .sub-content-item {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-size: contain;
  background-position: center;
  background-repeat: no-repeat;
  display: none;
}

#shopify-section-{{ section.id }} .sub-content-item.active {
  display: block;
}

.banner-tabs {
  display: flex;
  gap: 8px;
  margin-bottom: 5px;
}

.banner-tab {
  align-items: center;
  justify-content: center;
  padding: 6px 10px;
  background-color: white;
  margin-left: 5px;
  border-radius: 50px;
  transition: background-color 0.3s;
  white-space: nowrap;
  cursor: pointer;
  color: black;
  min-width: 60px;
  max-height: 40px;
  display: flex;
  background-color: #d5d5d5;
}

.banner-tab.active,
.banner-tab:hover {
  background-color: #ffffff;
}

.sub-tabs-container {
  display: flex;
  justify-content: flex-end;
  width: 100%;
}

.sub-tabs {
  display: flex;
  gap: 6px;
  justify-content: flex-end;
  margin-top: 5px;
}

.sub-tab {
  padding: 10px;
  margin-left: 5px;
  border-radius: 24px;
  cursor: pointer;
  transition: background-color 0.3s;
  min-width: 40px;
  height: 40px;
  align-items: center;
  justify-content: center;
  position: relative;
}

.sub-tab.active::before {
  content: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3E%3Cpath fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' d='M5 12l5 5L20 7'/%3E%3C/svg%3E");
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 1em;
  height: 1em;
  color: inherit;
}

.sub-tab.active[style*="background-color: transparent"]::before,
.sub-tab.active[style*="background-color:transparent"]::before,
.sub-tab.active[style*="background-color: rgba(0, 0, 0, 0)"]::before,
.sub-tab.active[style*="background-color:rgba(0,0,0,0)"]::before,
.sub-tab.active[style*="background-color: #00000000"]::before,
.sub-tab.active[style*="background-color:#00000000"]::before,
.sub-tab.active.transparent-bg::before {
  display: none !important;
}

.sub-content-link {
  position: absolute;
  top: 50px;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 5;
  cursor: pointer;
}

.banner-content {
  display: none;
}

.banner-content.active {
  display: block;
}

.sub-tabs-group {
  display: none;
}

.sub-tabs-group.active {
  display: block;
}

#shopify-section-{{ section.id }} .banner-header-container {
  display: flex;
  justify-content: space-between;
  align-items: flex-start;
  position: relative;
  width: 100%;
  padding: 15px;
  z-index: 10;
  flex-wrap: wrap;
}

.banner-header-left {
  flex: 1;
  min-width: 200px;
  max-width: 100%;
  padding-right: 15px;
  z-index: 11;
}

.bike-tabs-block:has(.banner-tabs[style*="display: none"]) .banner-header-left,
.bike-tabs-block:has(.sub-tabs-container[style*="display: none"]) .banner-header-left {
  max-width: 60%;
}

.bike-tabs-block:has(.banner-tabs[style*="display: none"]):has(.sub-tabs-container[style*="display: none"]) .banner-header-left {
  max-width: 100%;
}

.banner-title {
  font-size: 30px;
  font-weight: bold;
  margin-bottom: 5px;
  line-height: 1.2;
  color: #000000;
  white-space: normal;
}

.banner-description {
  font-size: 16px;
  line-height: 1.4;
  color: #000000;
}

.banner-header-right {
  display: flex;
  flex-direction: column;
  align-items: flex-end;
  flex-shrink: 0;
}

.bike-tabs-block[data-hide-banner-header-right="true"] .banner-header-right {
  display: none !important;
}

.bike-tabs-block.empty-main-transparent-sub .banner-header-right,
#shopify-section-{{ section.id }} .bike-tabs-block.empty-main-transparent-sub .banner-header-right {
  display: none !important;
}

.custom-was-price {
  color: #8B0000;
  text-decoration: line-through;
  margin-left: 5px;
  font-size: 0.85em;
}

.column-item {
  text-align: left;
  padding: 10px;
  min-width: 140px;
}

@media (max-width: 980px) and (min-width: 781px) {
  .banner-header-container {
    flex-direction: row;
    flex-wrap: nowrap;
  }

  .banner-header-left {
    max-width: 100%;
  }

  .banner-header-right {
    min-width: 45%;
    flex-grow: 0;
    max-width: 45%;
  }

  .banner-tabs {
    justify-content: flex-end;
  }

  .sub-tabs-container {
    justify-content: flex-end;
  }
}

@media (max-width: 780px) {
  .banner-header-container {
    flex-direction: column;
    align-items: center;
    text-align: center;
    padding: 60px 15px 0 15px !important;
  }

  .banner-header-left {
    max-width: 100%;
    padding-right: 0;
    margin-bottom: 25px;
    flex: 0 0 auto;
    width: 100%;
  }

  .banner-header-right {
    width: 100%;
    align-items: center;
    flex: 0 0 auto;
  }

  .sub-tabs-container {
    justify-content: center !important;
  }

  .banner-tabs {
    justify-content: center;
  }

  .banner-title {
    font-size: 40px;
  }

  .banner-description {
    font-size: 16px;
  }

  .banner-tab {
    margin-left: 0;
    margin-right: 5px;
  }

  .sub-tab {
    margin-left: 0;
    margin-right: 5px;
  }
}

.hidden {
  display: none !important;
}

.slide-footer-{{ block.id }} {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 10px;
  margin-top: 15px;
}

.footer-title {
  font-size: 30px;
  margin-bottom: 3px;
  font-weight: bold;
}

.footer-description {
  color: #000000;
  font-size: 16px;
  line-height: 1;
}

.footer-button-{{ block.id }} {
  padding: 8px 16px;
  border-radius: 20px;
  text-decoration: none;
  transition: all 0.3s ease;
  background-color: #000000;
  color: #ffffff !important;
  font-size: 16px;
  white-space: nowrap;
}

.footer-button-{{ block.id }}:hover {
  opacity: 0.9;
  transform: translateY(-1px);
}

@media (max-width: 768px) {
  .slide-footer-{{ block.id }} {
    flex-direction: column;
    gap: 10px;
    align-items: center;
    text-align: center;
    padding: 20px 20px 60px 20px;
  }

  .footer-left {
    text-align: center;
    width: 100%;
  }

  .footer-right {
    text-align: center;
    width: 100%;
  }

  .footer-title {
    font-size: 24px;
    text-align: center;
  }

  .footer-description {
    font-size: 14px;
    text-align: center;
  }

  .footer-button-{{ block.id }} {
    font-size: 14px;
    text-align: center;
    width: 80%;
    display: inline-block;
    margin-top: 20px;
  }
}

.columns-container-{{ block.id }} {
  display: flex;
  flex-direction: row;
  gap: 20px;
  margin-top: 0;
  text-align: left;
  justify-content: center;
  align-items: flex-start;
}

.columns-container-{{ block.id }} .column-title {
  color: #000000;
  font-size: 16px;
  margin-bottom: 5px;
  font-weight: bold;
}

.columns-container-{{ block.id }} .column-description {
  color: #000000;
  font-size: 16px;
  line-height: 1.2;
}

@media (max-width: 768px) {
  .columns-container-{{ block.id }} {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    grid-gap: 10px;
  }

  .columns-container-{{ block.id }} .column-title {
    font-size: 16px;
  }

  .columns-container-{{ block.id }} .column-description {
    font-size: 16px;
  }
}
{% endstyle %}
{% assign current_locale = request.locale.iso_code | default: 'en' %}
{% assign locale_prefix = current_locale | slice: 0, 2 %}
{% assign show_main_tabs = block.settings.show_main_tabs | default: true %}
{% assign show_sub_tabs = block.settings.show_sub_tabs | default: true %}
{% assign hide_banner_header_right = block.settings.hide_banner_header_right | default: false %}
{% assign selected_product = all_products[block.settings.selected_product] %}
{% assign product_url = selected_product.url %}

<div
  class="bike-tabs-block"
  id="block-{{ block.id }}"
  {% if hide_banner_header_right %}
    data-hide-banner-header-right="true"
  {% endif %}
>
  <div class="banner-header-container">
    <div class="banner-header-left">
      {% assign title_key = 'title_' | append: request.locale.iso_code %}
      {% assign default_title_key = 'title_en' %}
      {% assign description_key = 'description_' | append: request.locale.iso_code %}
      {% assign default_description_key = 'description_en' %}

      <h2 class="banner-title">{{ selected_product.title | escape }}</h2>

      {% if locale_prefix == 'de' %}
        {{ block.settings.description_de }}
      {% elsif locale_prefix == 'fr' %}
        {{ block.settings.description_fr }}
      {% elsif locale_prefix == 'fi' %}
        {{ block.settings.description_fi }}
      {% else %}
        {{ block.settings.description_en }}
      {% endif %}
    </div>

    <div
      class="banner-header-right"
      {% if show_main_tabs == false %}
        data-main-tabs-hidden="true"
      {% endif %}
    >
      <div
        class="banner-tabs"
        {% if show_main_tabs == false %}
          style="display: none;"
        {% endif %}
      >
        {% for i in (1..3) %}
          {% assign tab_type_key = 'tab_' | append: i | append: '_type' %}
          {% assign tab_type = block.settings[tab_type_key] %}
          {% if tab_type != blank and tab_type != 'none' %}
            {% assign has_sub_tabs = false %}
            {% for j in (1..4) %}
              {% assign image_key = 'tab_' | append: i | append: '_sub_tab_' | append: j | append: '_image' %}
              {% assign image = block.settings[image_key] %}
              {% if image != blank %}
                {% assign has_sub_tabs = true %}
              {% endif %}
            {% endfor %}

            {% if has_sub_tabs %}
              <div
                class="banner-tab {% if forloop.first %}active{% endif %}"
                data-tab-id="tab-{{ block.id }}-{{ i }}"
                data-block-id="block-{{ block.id }}"
                data-tab-index="{{ i }}"
              >
                {% case tab_type %}
                  {% when 'step_through' %}
                    {% render 'icon-stepthrough' %}
                  {% when 'high_step' %}
                    {% render 'icon-highstep' %}
                  {% when 'low_step' %}
                    {% render 'icon-lowstep' %}
                {% endcase %}
              </div>
            {% endif %}
          {% endif %}
        {% endfor %}
      </div>

      <div
        class="sub-tabs-container"
        {% if show_sub_tabs == false %}
          style="display: none;"
        {% endif %}
      >
        {% for i in (1..3) %}
          {% assign tab_type_key = 'tab_' | append: i | append: '_type' %}
          {% assign tab_type = block.settings[tab_type_key] %}
          {% if tab_type != blank %}
            {% assign has_sub_tabs = false %}
            {% for j in (1..4) %}
              {% assign image_key = 'tab_' | append: i | append: '_sub_tab_' | append: j | append: '_image' %}
              {% assign image = block.settings[image_key] %}
              {% if image != blank %}
                {% assign has_sub_tabs = true %}
              {% endif %}
            {% endfor %}

            {% if has_sub_tabs %}
              <div
                class="sub-tabs-group {% if forloop.first %}active{% endif %}"
                data-tab-group="tab-{{ block.id }}-{{ i }}"
              >
                <div class="sub-tabs">
                  {% for j in (1..4) %}
                    {% assign image_key = 'tab_' | append: i | append: '_sub_tab_' | append: j | append: '_image' %}
                    {% assign image = block.settings[image_key] %}
                    {% if image != blank %}
                      {% assign bg_color_key = 'tab_'
                        | append: i
                        | append: '_sub_tab_'
                        | append: j
                        | append: '_bg_color'
                      %}
                      {% assign bg_color = block.settings[bg_color_key] | default: '#ffffff' %}
                      {% assign is_transparent = false %}
                      {% if bg_color == 'transparent'
                        or bg_color == ''
                        or bg_color == null
                        or bg_color contains 'rgba(0,0,0,0)'
                        or bg_color contains 'rgba(0, 0, 0, 0)'
                      %}
                        {% assign is_transparent = true %}
                      {% endif %}
                      <div
                        class="sub-tab {% if forloop.first %}active{% endif %} {% if is_transparent %}transparent-bg{% endif %}"
                        style="background-color: {{ bg_color }};"
                        data-subtab-id="subtab-{{ block.id }}-{{ i }}-{{ j }}"
                        data-parent-tab="tab-{{ block.id }}-{{ i }}"
                        data-block-id="block-{{ block.id }}"
                        data-transparent="{{ is_transparent }}"
                      >
                        {% if global_link_url != blank %}
                          <a
                            target="_blank"
                            href="{{ global_link_url }}"
                            class="sub-content-link"
                            aria-label="View product"
                          ></a>
                        {% endif %}
                      </div>
                    {% endif %}
                  {% endfor %}
                </div>
              </div>
            {% endif %}
          {% endif %}
        {% endfor %}
      </div>
    </div>
  </div>

  <div class="banner-tab-content">
    {% for i in (1..3) %}
      {% assign tab_type_key = 'tab_' | append: i | append: '_type' %}
      {% assign tab_type = block.settings[tab_type_key] %}
      {% if tab_type != blank %}
        {% assign has_sub_tabs = false %}
        {% for j in (1..4) %}
          {% assign image_key = 'tab_' | append: i | append: '_sub_tab_' | append: j | append: '_image' %}
          {% assign image = block.settings[image_key] %}
          {% if image != blank %}
            {% assign has_sub_tabs = true %}
          {% endif %}
        {% endfor %}

        {% if has_sub_tabs %}
          <div
            id="tab-{{ block.id }}-{{ i }}"
            class="banner-content {% if forloop.first %}active{% endif %}"
          >
            <div class="sub-content">
              {% for j in (1..4) %}
                {% assign image_key = 'tab_' | append: i | append: '_sub_tab_' | append: j | append: '_image' %}
                {% assign image = block.settings[image_key] %}
                {% if image != blank %}
                  <div
                    id="subtab-{{ block.id }}-{{ i }}-{{ j }}"
                    class="sub-content-item {% if forloop.first %}active{% endif %}"
                    style="background-image: url('{{ image | img_url: '800x' }}');"
                  >
                    <a
                      href="{{ product_url }}"
                      class="sub-content-link"
                      aria-label="{{ 'View product' | t }}"
                    ></a>
                  </div>
                {% endif %}
              {% endfor %}
            </div>
          </div>
        {% endif %}
      {% endif %}
    {% endfor %}
  </div>
</div>

<div class="columns-container-{{ block.id }}">
  <div class="column-item">
    <h3 class="column-title">
      {% if request.locale.iso_code == 'de' %}
        Motor
      {% elsif request.locale.iso_code == 'fr' %}
        Moteur
      {% elsif request.locale.iso_code == 'fi' %}
        Moottori
      {% else %}
        Motor
      {% endif %}
    </h3>
    <div class="column-description">{{ selected_product.metafields.custom.motor_torque_2.value | default: 'N/A' }}</div>
  </div>

  <div class="column-item">
    <h3 class="column-title">
      {% if request.locale.iso_code == 'de' %}
        Batterie
      {% elsif request.locale.iso_code == 'fr' %}
        Batterie
      {% elsif request.locale.iso_code == 'fi' %}
        Akku
      {% else %}
        Battery
      {% endif %}
    </h3>
    <div class="column-description">
      {{ selected_product.metafields.custom.battery_capacity.value | default: 'N/A' }}
    </div>
  </div>

  <div class="column-item">
    <h3 class="column-title">
      {% if request.locale.iso_code == 'de' %}
        Gänge
      {% elsif request.locale.iso_code == 'fr' %}
        Transmission
      {% elsif request.locale.iso_code == 'fi' %}
        Vaihteisto
      {% else %}
        Gears
      {% endif %}
    </h3>
    <div class="column-description">{{ selected_product.metafields.custom.gears.value | default: 'N/A' }}</div>
  </div>

  <div class="column-item">
    <h3 class="column-title">
      {% if request.locale.iso_code == 'de' %}
        Rahmen
      {% elsif request.locale.iso_code == 'fr' %}
        Cadre
      {% elsif request.locale.iso_code == 'fi' %}
        Runko
      {% else %}
        Frame
      {% endif %}
    </h3>
    <div class="column-description">{{ selected_product.metafields.custom.frame.value | default: 'N/A' }}</div>
  </div>
</div>

<div class="slide-footer-{{ block.id }}">
  <div class="footer-left">
    <h3 class="footer-title">
      {% unless bss_check_variant %}
        {% if selected_product.compare_at_price > selected_product.price %}
          <span class="custom-current-price">{{ selected_product.price | money }}</span>
          <span class="custom-was-price">{{ selected_product.compare_at_price | money }}</span>
        {% else %}
          <span class="custom-current-price">{{ selected_product.price | money }}</span>
        {% endif %}
      {% else %}
        <span class="bsscommerce-hv-message">Lock</span>
      {% endunless %}
    </h3>

    {% if localization.country.iso_code == 'DE' %}
      {% if selected_product.metafields.custom.zinia_financing.value %}
        {% case request.locale.iso_code %}
          {% when 'de' %}
            Finanzierung ab €{{ selected_product.metafields.custom.zinia_financing.value }}/Monat mit
          {% when 'fr' %}
            Financement à partir de €{{ selected_product.metafields.custom.zinia_financing.value }}/mois avec
          {% when 'fi' %}
            Rahoitus alkaen €{{ selected_product.metafields.custom.zinia_financing.value }}/kk
          {% else %}
            Financing from €{{ selected_product.metafields.custom.zinia_financing.value }}/month with
        {% endcase %}
        {% render 'icon-zinia' %}
      {% endif %}
    {% endif %}
  </div>

  <div class="footer-right">
    <a
      class="footer-button-{{ block.id }}"
      href="{{ product_url }}"
    >
      {% if request.locale.iso_code == 'de' %}
        Jetzt entdecken
      {% elsif request.locale.iso_code == 'fr' %}
        Découvrir maintenant
      {% elsif request.locale.iso_code == 'fi' %}
        Tutustu nyt
      {%- else -%}
        Discover now
      {% endif %}
      &rarr;
    </a>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    function hasTransparentBackground(element) {
      if (!element) return false;

      const bgColor = window.getComputedStyle(element).backgroundColor;
      return (
        bgColor === 'transparent' ||
        bgColor === 'rgba(0, 0, 0, 0)' ||
        bgColor.indexOf('rgba(0,0,0,0') !== -1 ||
        bgColor.indexOf('rgba(0, 0, 0, 0') !== -1 ||
        element.dataset.transparent === 'true' ||
        element.classList.contains('transparent-bg')
      );
    }

    function initBikeTabs() {
      document.querySelectorAll('.bike-tabs-block').forEach((blockElement) => {
        if (!blockElement || !blockElement.id) return;

        const blockId = blockElement.id;
        const bannerHeaderRight = blockElement.querySelector('.banner-header-right');
        const bannerTabs = blockElement.querySelector('.banner-tabs');
        const subTabsContainer = blockElement.querySelector('.sub-tabs-container');

        const forceHide = blockElement.getAttribute('data-hide-banner-header-right') === 'true';
        if (forceHide && bannerHeaderRight) {
          blockElement.classList.add('empty-main-transparent-sub');
        }

        if (bannerHeaderRight && bannerTabs && subTabsContainer) {
          const bannerTabsStyle = window.getComputedStyle(bannerTabs);
          const bannerTabsHidden = bannerTabsStyle.display === 'none';

          let allSubTabsTransparent = true;
          const subTabs = blockElement.querySelectorAll('.sub-tab');

          if (subTabs.length > 0) {
            subTabs.forEach((subTab) => {
              if (!hasTransparentBackground(subTab)) {
                allSubTabsTransparent = false;
              } else {
                subTab.classList.add('transparent-bg');
                subTab.setAttribute('data-transparent', 'true');
              }
            });
          }

          if (bannerTabsHidden && allSubTabsTransparent) {
            bannerHeaderRight.style.display = 'none';
            blockElement.classList.add('empty-main-transparent-sub');
          } else {
            bannerHeaderRight.style.display = '';
            blockElement.classList.remove('empty-main-transparent-sub');
          }
        }

        const firstContent = blockElement.querySelector('.banner-content');
        if (firstContent) firstContent.classList.add('active');

        blockElement.querySelectorAll('.banner-content').forEach((content) => {
          const firstSubItem = content.querySelector('.sub-content-item');
          if (firstSubItem) firstSubItem.classList.add('active');
        });
      });
    }

    function setupBannerTabClicks() {
      document.querySelectorAll('.banner-tab').forEach((tab) => {
        const newTab = tab.cloneNode(true);
        tab.parentNode.replaceChild(newTab, tab);

        newTab.addEventListener('click', function (event) {
          event.stopPropagation();

          const blockId = this.dataset.blockId;
          const tabId = this.dataset.tabId;
          const tabIndex = this.dataset.tabIndex;
          const blockElement = document.getElementById(blockId);

          if (!blockElement) return;

          blockElement.querySelectorAll('.banner-tab').forEach((t) => {
            t.classList.remove('active');
          });

          this.classList.add('active');

          blockElement.querySelectorAll('.banner-content').forEach((c) => {
            c.classList.remove('active');
          });

          const content = blockElement.querySelector(`#${tabId}`);
          if (content) content.classList.add('active');

          const subTabsContainer = blockElement.querySelector('.sub-tabs-container');
          if (!subTabsContainer) return;

          const subTabsStyle = window.getComputedStyle(subTabsContainer);
          const subTabsVisible = subTabsStyle.display !== 'none';

          if (subTabsVisible) {
            blockElement.querySelectorAll('.sub-tabs-group').forEach((group) => {
              group.classList.remove('active');
            });

            const currentTabGroup = blockElement.querySelector(`.sub-tabs-group[data-tab-group="${tabId}"]`);
            if (currentTabGroup) {
              currentTabGroup.classList.add('active');

              const firstSubTab = currentTabGroup.querySelector('.sub-tab');
              if (firstSubTab) {
                setTimeout(() => {
                  firstSubTab.click();
                }, 10);
              }
            }
          }
        });
      });
    }

    function setupSubTabClicks() {
      document.querySelectorAll('.sub-tab').forEach((subTab) => {
        const newSubTab = subTab.cloneNode(true);
        subTab.parentNode.replaceChild(newSubTab, subTab);

        if (hasTransparentBackground(newSubTab)) {
          newSubTab.classList.add('transparent-bg');
          newSubTab.setAttribute('data-transparent', 'true');
        }

        newSubTab.addEventListener('click', function (event) {
          event.stopPropagation();

          const blockId = this.dataset.blockId;
          const subtabId = this.dataset.subtabId;
          const parentTabId = this.dataset.parentTab;
          const blockElement = document.getElementById(blockId);

          if (!blockElement) return;

          const isTransparent = hasTransparentBackground(this);
          if (isTransparent) {
            this.classList.add('transparent-bg');
            this.setAttribute('data-transparent', 'true');
          }

          const subTabGroup = blockElement.querySelector(`.sub-tabs-group[data-tab-group="${parentTabId}"]`);
          if (subTabGroup) {
            subTabGroup.querySelectorAll('.sub-tab').forEach((st) => {
              st.classList.remove('active');
            });
          }

          this.classList.add('active');

          const parentContent = blockElement.querySelector(`#${parentTabId}`);
          if (parentContent) {
            parentContent.querySelectorAll('.sub-content-item').forEach((item) => {
              item.classList.remove('active');
            });

            const contentItem = parentContent.querySelector(`#${subtabId}`);
            if (contentItem) contentItem.classList.add('active');
          }
        });
      });
    }

    function triggerFirstTabClick() {
      document.querySelectorAll('.bike-tabs-block').forEach((block) => {
        const bannerTabs = block.querySelector('.banner-tabs');
        if (!bannerTabs) return;

        const bannerTabsStyle = window.getComputedStyle(bannerTabs);
        const bannerTabsVisible = bannerTabsStyle.display !== 'none';

        if (bannerTabsVisible) {
          const firstTab = block.querySelector('.banner-tab');
          if (firstTab) {
            setTimeout(() => {
              firstTab.click();
            }, 50);
          }
        }
      });
    }

    try {
      initBikeTabs();

      setupBannerTabClicks();
      setupSubTabClicks();

      setTimeout(triggerFirstTabClick, 100);
    } catch (error) {
      console.error('Error initializing bike tabs:', error);
    }
  });
</script>