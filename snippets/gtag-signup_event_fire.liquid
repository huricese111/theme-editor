<script>
    (function () {
        const canFireSignupEventForRegisterFormCase = () => {
            const currentPagePath = new URL(window.location.href).pathname;
            const isTargetPageAfterSignup = currentPagePath.endsWith('/account') || currentPagePath.endsWith('/challenge');
            const isRefererIsRegisterPage = () => {
                const refererUrl = new URL(document.referrer);
                return refererUrl.pathname.endsWith('/account/register');
            };

            const isInQuietPeriodOfFiringSignupEvent = () => {
                const firedAt = window.localStorage.getItem("sign_up_event_fired_at");
                if (!firedAt) {
                    return false;
                }
                const expiredAt = Number.parseInt(firedAt) + 3600 * 1000;
                return Date.now() <= expiredAt;
            };

            return isTargetPageAfterSignup && isRefererIsRegisterPage() && !isInQuietPeriodOfFiringSignupEvent()
        };

        const waitFor = async (predicate) => {
            const timeout = 30 * 1000
            const interval = 100;
            const start = Date.now();

            let done = false;

            do {
                if (predicate()) {
                    done = true;
                } else if (Date.now() > (start + timeout)) {
                    throw new Error(`Timed out waiting for predicate to return true after ${timeout}ms.`);
                }
                await new Promise((resolve) => setTimeout(resolve, interval));
            } while (!done);
        }

        const sendSignupEvent = (eventParams) => {
            console.log("send signup event", eventParams);
            waitFor(() => !!window.gtag).then(() => {
                window.gtag("event", "sign_up", eventParams);
                window.localStorage.setItem("sign_up_event_fired_at", Date.now() + "")
            });
            waitFor(() => !!window.fbq).then(() => {
                window.fbq('track', 'CompleteRegistration');
                window.localStorage.setItem("sign_up_event_fired_at", Date.now() + "")
            });
        };

        // register method 1: hiko social login
        document.addEventListener("hiko", (event) => {
            if (event.detail.action === 'activate') {
                sendSignupEvent({
                    method: "hiko",
                    customer_id: event.detail.customer_id
                });
            }
        });

        // register method 2: default register form
        if (canFireSignupEventForRegisterFormCase()) {
            sendSignupEvent({
                method: "register_form"
            });
        }
    })();
</script>

<script>
    // newsletter subscribe form  (example position:  footer)
    (function () {
        window.addEventListener("DOMContentLoaded", () => {
            const newsLetterSignupForms = document.querySelectorAll(".signup-form form.contact-form");
            if (newsLetterSignupForms) {
                newsLetterSignupForms.forEach(form => {
                    form.addEventListener("submit", () => {
                        [
                            () => gtag('event', 'newsletter_signup'),
                            () => fbq('trackCustom', 'newsletter_signup')
                        ].forEach(trackFn => {
                            try {
                                trackFn();
                            } catch (e) {
                                console.error(e)
                            }
                        });
                    });
                })
            }
        });
    })();
</script>

<script>
    // preheat 2024 landing page - newsletter form submit
    (function () {
        window.addEventListener("DOMContentLoaded", () => {
            const currentPagePath = new URL(window.location.href).pathname;
            const isPreheat2024Page =
                currentPagePath.endsWith("/pages/trekking-7-step-through-teaser")
                || currentPagePath.endsWith("/pages/mountain-7-teaser");

            if (isPreheat2024Page) {
                const newsLetterSignupForms = document.querySelectorAll(".newsletter_signup_form");
                if (newsLetterSignupForms) {
                    newsLetterSignupForms.forEach(form => {
                        form.addEventListener("submit", () => {
                            [
                                () => gtag('event', 'preheat_2024_newsletter_signup'),
                                () => fbq('trackCustom', 'preheat_2024_newsletter_signup')
                            ].forEach(trackFn => {
                                try {
                                    trackFn();
                                } catch (e) {
                                    console.error(e)
                                }
                            });
                        });
                    })
                }
            }
        });
    })();
</script>