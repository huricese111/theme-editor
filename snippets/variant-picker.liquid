{% comment %}
  Parameters:
  - product {Object} - Product object.
  - product_form_id {String} - Product form ID.
  - media_ratio {Number} - Media aspect ratio.
  - block {Object} - Block object.
  - dynamic_availability_mode {String} - Dynamic availability mode, 'selection' or 'down', default is 'selection'.
  - show_variant_metafield {Boolean} - Whether to show variant metafield after variant picker, default is true.

  Dependencies:
  - Custom select component

  Usage:
  {% render 'variant-picker', product: product, product_form_id: product_form_id, block: block %}
  {% render 'variant-picker', product: product, product_form_id: product_form_id, block: block, show_variant_metafield: false %}
{% endcomment %}

{%- unless product.has_only_default_variant -%}
  {%- if product.variants.size > 1 or block.settings.show_single -%}
    <script src="{{ 'variant-picker.js' | asset_url }}" defer></script>
    <style>
      .opt-label[style*="display: none"],
      .js-option[style*="display: none"] {
        display: none !important;
      }
      .custom-select__option[style*="display: none"] {
        display: none !important;
      }
    </style>

    <variant-picker
        class="no-js-hidden"
        data-url="{{ product.url }}"
        data-update-url="{{ update_url | default: false }}"
        data-availability="{{ block.settings.dynamic_availability }}"
        data-availability-mode="{{ dynamic_availability_mode | default: 'selection' }}">
      {%- for option in product.options_with_values -%}
        {%- capture option_id %}{{ product_form_id }}-{{ option.name | handle }}{% endcapture -%}
        {%- liquid
          assign is_color_selector = false
          assign is_variant_image_style = false
          assign show_size_chart = false
          assign is_dropdown = false

          if settings.swatch_source == 'theme' and settings.swatch_option_name contains option.name and settings.swatch_method == 'variant-images'
            assign is_color_selector = true
            assign is_variant_image_style = true
            assign option_index0 = forloop.index0
          elsif settings.swatch_source == 'theme' and settings.swatch_option_name contains option.name and settings.swatch_method == 'swatches'
            assign is_color_selector = true
          else
            assign native_swatch_options = option.values | where: 'swatch'
            if settings.swatch_source == 'native' and native_swatch_options.size > 0
              assign is_color_selector = true
              assign is_native_swatch_style = true
            endif
          endif

          if is_variant_image_style or is_native_swatch_style
            assign img_sizes = settings.swatch_picker_image_size | append: 'px'
            assign img_widths = settings.swatch_picker_image_size | times: 2 | append: ', ' | append: settings.swatch_picker_image_size
            if settings.swatch_style == 'icon_square'
              assign img_aspect_ratio = null
              assign img_crop_align = null
            else
              assign img_aspect_ratio = 1
              assign img_crop_align = settings.swatch_crop_align
            endif
          endif

          if is_color_selector
            if settings.swatch_style == 'dropdown'
              assign is_dropdown = true
            endif
          elsif block.settings.selector_style == 'dropdown'
            assign is_dropdown = true
          endif

          if block.settings.enable_size_chart and block.settings.size_chart_variant == option.name and block.settings.size_chart_page != blank
            assign show_size_chart = true
          endif
        -%}

        {%- if show_size_chart -%}
          {%- capture size_chart_link -%}
            <modal-opener class="no-js-hidden" data-modal="size-chart-{{ product.id }}-{{ section.id }}">
              <button type="button" class="link block text-sm size-chart-link" aria-haspopup="dialog">
                <span class="size-chart-link__icon">{%- render 'icon', icon: 'ruler', size: 'small' -%}</span>
                <span class="size-chart-link__text underline">{{- block.settings.size_chart_label -}}</span>
              </button>
            </modal-opener>
            <noscript>
              <a href="{{ block.settings.size_chart_page.url }}" class="link">{{ block.settings.size_chart_label }}</a>
            </noscript>
          {%- endcapture -%}
        {%- endif -%}

        {%- if is_dropdown -%}
          {%- if is_variant_image_style -%}
            <style>
              {%- for value in option.values -%}
                {%- for variant in product.variants -%}
                  {%- if variant.options[option_index0] == value -%}
                    #{{ option_id }} [data-swatch="{{ value | replace: '"', '\"' | downcase }}"] {
                      --swatch-background-color: transparent;
                      --swatch-background-image: url({{ variant.featured_media | image_url: width: 40, height: 40, crop: settings.swatch_crop_align }});
                    }
                  {%- endif -%}
                {%- endfor -%}
              {%- endfor -%}
            </style>
          {%- endif -%}
          {%- capture selector_label -%}
            <label class="label" id="{{ option_id }}-label">{{- option.name -}}</label>
          {%- endcapture -%}
          <div class="option-selector" data-selector-type="dropdown" data-option="{{ option.name | escape }}">
            {%- if show_size_chart -%}
              <div class="flex justify-between">
                {{ selector_label }}
                {{ size_chart_link }}
              </div>
            {%- else -%}
              {{ selector_label }}
            {%- endif -%}
            {%- liquid
              if section.settings.select_first_variant or product.variants.size == 1
                assign selected_value = option.selected_value
              else
                if product.selected_variant
                  assign selected_value = option.selected_value
                else
                  assign selected_value = ''
                endif
              endif
            -%}
            <script src="{{ 'custom-select.js' | asset_url }}" defer></script>
            {% render 'custom-select',
              id: option_id,
              option_values: option.values,
              selected_value: selected_value,
              swatches: is_color_selector,
              native_swatches: is_native_swatch_style
            %}
          </div>
        {%- else -%}
          <fieldset class="option-selector" data-selector-type="listed" data-option="{{ option.name | escape }}">
            {%- if show_size_chart -%}
              <div class="flex justify-between">
                <legend class="label">{{- option.name -}}</legend>
                {{ size_chart_link }}
              </div>
            {%- else -%}
              <legend class="label">{{- option.name -}}{% if is_color_selector %}: <span class="option-selector__label-value js-color-text">{% if section.settings.select_first_variant or product.variants.size == 1 or product.selected_variant %}{{ option.selected_value }}{% endif %}</span>{% endif %}</legend>
            {%- endif -%}
            <div class="option-selector__btns flex flex-wrap">
              {%- for value in option.values -%}
                {%- assign value_index0 = forloop.index0 -%}
                <input type="radio" class="opt-btn visually-hidden focus-label js-option" name="{{ option_id }}-option" id="{{ option_id }}-opt-{{ value_index0 }}" value="{{ value | escape }}" required{% if section.settings.select_first_variant or product.variants.size == 1 or product.selected_variant %}{% if option.selected_value == value %} checked{% endif %}{% endif %}>
                {%- if is_variant_image_style -%}
                  {%- for variant in product.variants -%}
                    {%- if variant.options[option_index0] == value -%}
                      <label class="opt-label opt-label--image" for="{{ option_id }}-opt-{{ value_index0 }}">
                        <div class="opt-label__media media">
                          {%- render 'image',
                            image: variant.featured_media,
                            sizes: img_sizes,
                            widths: img_widths,
                            custom_aspect_ratio: img_aspect_ratio,
                            custom_crop: img_crop_align
                          -%}
                        </div>
                        <span class="{% if settings.swatch_style != 'listed' %}visually-hidden {% endif %}js-value">{{ value }}</span>
                      </label>
                      {%- break -%}
                    {%- endif -%}
                  {%- endfor -%}
                {%- elsif settings.swatch_source == 'native' and value.swatch.image -%}
                  <label class="opt-label opt-label--image" for="{{ option_id }}-opt-{{ value_index0 }}">
                    <div class="opt-label__media media">
                      {%- render 'image',
                        image: value.swatch.image,
                        sizes: img_sizes,
                        widths: img_widths,
                        custom_aspect_ratio: img_aspect_ratio,
                        custom_crop: img_crop_align
                      -%}
                    </div>
                    <span class="{% if settings.swatch_style != 'listed' %}visually-hidden {% endif %}js-value">{{ value }}</span>
                  </label>

                {%- elsif settings.swatch_source == 'native' and value.swatch.color -%}
                  <label class="opt-label opt-label--swatch btn relative"
                    data-swatch="{{ value | replace: '"', '' | downcase }}"
                    for="{{ option_id }}-opt-{{ value_index0 }}"
                    style="--swatch-background-color: rgb({{ value.swatch.color.rgb }})">
                    <span class="{% if settings.swatch_style != 'listed' %}visually-hidden {% endif %}js-value">{{ value }}</span>
                  </label>

                {%- else -%}
                  {%- liquid
                    assign is_swatch = false
                    if is_color_selector and settings.swatch_method == 'swatches'
                      assign is_swatch = true
                    endif
                  -%}
                  <label class="opt-label {% if is_swatch %}opt-label--swatch{% else %}opt-label--btn{% endif %} btn relative text-center"{% if is_swatch %}
                    data-swatch="{{ value | replace: '"', '' | downcase }}"{% endif %}
                    for="{{ option_id }}-opt-{{ value_index0 }}">
                    <span class="{% if is_swatch and settings.swatch_style != 'listed' %}visually-hidden {% endif %}js-value">{{ value }}</span>
                  </label>
                {%- endif -%}
              {%- endfor -%}
            </div>
          </fieldset>
        {%- endif -%}
      {%- endfor -%}

      <script type="application/json">
        {"variants": {{- product.variants | json -}},"formatted": {
          {%- for variant in product.variants -%}
            "{{ variant.id }}":{"price":{% if settings.product_currency_code_enabled %}{{ variant.price | money_with_currency | json }}{% else %}{{ variant.price | money | json }}{% endif %}
              {%- if variant.compare_at_price > variant.price -%}
                ,"compareAtPrice":{{ variant.compare_at_price | money | json -}}
              {%- endif -%}
              {%- if variant.unit_price_measurement -%}
                ,"unitPrice":{{ variant.unit_price | money | json -}}
              {%- endif -%}
              {%- if variant.inventory_management != nil and variant.inventory_quantity <= 0 -%}
                ,"inventory":"none"
              {%- endif -%}
            }{%- unless forloop.last %},{% endunless -%}
          {%- endfor -%}
        }}
      </script>
    </variant-picker>

    {%- liquid
      if block.settings.show_variant_metafield != blank
        assign show_metafield = block.settings.show_variant_metafield
      else
        assign show_metafield = show_variant_metafield | default: true
      endif
      
      if show_metafield and block
        comment
          创建一个占位符，JavaScript 将会同步数据到这里
        endcomment
        capture component_id
          echo 'variant-metafield-sync-'
          echo block.id | slice: -6, 6
        endcapture
        
        echo '<div id="' | append: component_id | append: '" class="variant-metafields-block variant-metafield-sync">'
        echo '<div class="variant-metafield-value">Loading...</div>'
        echo '</div>'
      endif
    -%}

    {%- if block -%}
      <script>
        document.addEventListener('DOMContentLoaded', function() {
          // 等待一小段时间确保所有元素都已渲染
          setTimeout(function() {
            const existingMetafields = document.querySelectorAll('.variant-metafields-block');
            const variantPickerElement = document.querySelector('variant-picker[data-url*="{{ product.url }}"]');
            const syncElement = document.getElementById('variant-metafield-sync-{{ block.id | slice: -6, 6 }}');
            
            {%- if show_metafield -%}
              // 数据同步逻辑
              if (syncElement) {
                // 查找第一个独立的 variant-metafield block 作为数据源
                let sourceMetafield = null;
                for (let i = 0; i < existingMetafields.length; i++) {
                  const element = existingMetafields[i];
                  if (!element.classList.contains('variant-metafield-sync') && 
                      !variantPickerElement.contains(element) &&
                      variantPickerElement.nextElementSibling !== element) {
                    sourceMetafield = element;
                    break; // 找到第一个就停止
                  }
                }
                
                if (sourceMetafield) {
                  console.log('Found source metafield:', sourceMetafield);
                  
                  // 复制数据脚本
                  const sourceDataScript = sourceMetafield.querySelector('script[type="application/json"]');
                  if (sourceDataScript) {
                    const clonedScript = sourceDataScript.cloneNode(true);
                    clonedScript.id = 'variant-metafield-sync-{{ block.id | slice: -6, 6 }}-data';
                    syncElement.appendChild(clonedScript);
                    
                    console.log('Cloned data script:', clonedScript);
                    
                    // 解析数据
                    let metafieldsData;
                    try {
                      metafieldsData = JSON.parse(clonedScript.textContent);
                      console.log('Parsed metafields data:', metafieldsData);
                    } catch (e) {
                      console.error('Error parsing metafields data:', e);
                      return;
                    }
                    
                    // 获取当前变体ID
                    const form = variantPickerElement ? variantPickerElement.closest('form') : null;
                    const variantInput = form ? form.querySelector('input[name="id"]') : null;
                    const currentVariantId = variantInput ? parseInt(variantInput.value) : null;
                    
                    console.log('Current variant ID:', currentVariantId);
                    
                    // 初始化显示内容
                    const syncValue = syncElement.querySelector('.variant-metafield-value');
                    if (syncValue && currentVariantId && metafieldsData[currentVariantId]) {
                      syncValue.innerHTML = metafieldsData[currentVariantId] || '';
                      console.log('Initialized sync value:', metafieldsData[currentVariantId]);
                    } else if (syncValue) {
                      // 如果没有当前变体数据，复制源的当前显示内容
                      const sourceValue = sourceMetafield.querySelector('.variant-metafield-value');
                      if (sourceValue) {
                        syncValue.innerHTML = sourceValue.innerHTML;
                        console.log('Copied source value:', sourceValue.innerHTML);
                      }
                    }
                    
                    // 设置变体切换监听器
                    function updateSyncMetafield(variantId) {
                      if (!variantId || !syncValue) return;
                      const value = metafieldsData[variantId];
                      syncValue.innerHTML = value || '';
                      console.log('Updated sync metafield for variant', variantId, ':', value);
                    }
                    
                    // 监听变体变化事件
                    document.addEventListener('on:variant:change', function(event) {
                      if (event.detail && event.detail.variant) {
                        updateSyncMetafield(event.detail.variant.id);
                      }
                    });
                    
                    // 监听 variant picker 变化
                    if (variantPickerElement) {
                      variantPickerElement.addEventListener('change', function(event) {
                        const form = variantPickerElement.closest('form');
                        const variantInput = form ? form.querySelector('input[name="id"]') : null;
                        const variantId = variantInput ? parseInt(variantInput.value) : null;
                        if (variantId) {
                          updateSyncMetafield(variantId);
                        }
                      });
                    }
                  }
                } else {
                  console.log('No source metafield found');
                  // 如果没有找到源，显示提示信息
                  const syncValue = syncElement.querySelector('.variant-metafield-value');
                  if (syncValue) {
                    syncValue.innerHTML = 'No variant metafield found to sync';
                  }
                }
              }
              
              // 隐藏独立的 variant-metafield 实例
              existingMetafields.forEach(function(element) {
                // 检查元素是否在当前的 variant-picker 内部
                let isInsideCurrentPicker = false;
                if (variantPickerElement) {
                  isInsideCurrentPicker = variantPickerElement.contains(element) || 
                                        variantPickerElement.nextElementSibling === element ||
                                        (variantPickerElement.parentNode && variantPickerElement.parentNode.contains(element) && 
                                         element.previousElementSibling === variantPickerElement);
                }
                
                // 只隐藏不在当前 variant-picker 相关区域内的独立 variant-metafield 实例
                if (!isInsideCurrentPicker && !element.classList.contains('variant-metafield-sync')) {
                  element.style.display = 'none';
                  element.setAttribute('data-hidden-by-variant-picker', 'true');
                }
              });
            {%- else -%}
              // 开关关闭：恢复显示所有被当前 variant-picker 隐藏的 variant-metafield 实例
              existingMetafields.forEach(function(element) {
                if (element.getAttribute('data-hidden-by-variant-picker') === 'true') {
                  element.style.display = '';
                  element.removeAttribute('data-hidden-by-variant-picker');
                }
              });
            {%- endif -%}
          }, 100); // 100ms 延迟确保 DOM 完全渲染
        });
      </script>
    {%- endif -%}

    <noscript>
      <div class="product-info__select"{% if product.has_only_default_variant %} hidden{% endif %}>
        <label class="label" for="variants-{{ product.id }}-{{ section.id }}">
          {{- 'products.product.product_variants' | t -}}
        </label>
        <div class="select relative">
          <select class="select w-full" id="variants-{{ product.id }}-{{ section.id }}" name="id" form="{{ product_form_id }}">
            {%- for variant in product.variants -%}
              <option value="{{ variant.id }}"
                      {% if variant == current_variant %}selected{% endif %}
                      {% if variant.available == false %}disabled{% endif %}>
                {{- variant.title -}}
                {%- if variant.available == false %} - {{ 'products.product.sold_out' | t }}{% endif %}
                - {{ variant.price | money | strip_html }}
              </option>
            {%- endfor -%}
          </select>
        </div>
      </div>
    </noscript>
  {%- endif -%}
{%- endunless -%}

{%- if show_metafield and block -%}
  <style>
    .variant-metafield-sync {
      display: block;
      transition: opacity 0.3s ease;
      padding: 0 0 10px 0;
    }

    .variant-metafield-sync .variant-metafield-value {
      font-size: 16px;
      line-height: 1.6;
    }

    .variant-metafield-sync .variant-metafield-value img {
      max-width: 100%;
      height: auto;
    }
  </style>
{%- endif -%}
