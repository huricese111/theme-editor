<script defer>
    (function () {
        const waitFor = async (predicate) => {
            const timeout = 30 * 1000
            const interval = 100;
            const start = Date.now();

            let done = false;

            do {
                if (predicate()) {
                    done = true;
                } else if (Date.now() > (start + timeout)) {
                    throw new Error(`Timed out waiting for predicate to return true after ${timeout}ms.`);
                }
                await new Promise((resolve) => setTimeout(resolve, interval));
            } while (!done);
        };

        const autoDetectToTrack = () => {
            // usage: set these attributes for the target elements
            const elementSelector = ".hepha-tracking";
            const triggerTypeAttribute = "data-hepha-tracking-trigger";
            const eventNameAttribute = "data-hepha-tracking-event";

            const targetElements = document.querySelectorAll(elementSelector);
            console.debug(`${targetElements.length} target elements found to track click event`);
            targetElements.forEach(el => {
                const trigger = el.getAttribute(triggerTypeAttribute);
                const eventName = el.getAttribute(eventNameAttribute);
                if (trigger && eventName) {
                    el.addEventListener(trigger, () => {
                        [
                            () => gtag('event', eventName),
                            () => fbq('trackCustom', eventName)
                        ].forEach(trackFn => {
                            try {
                                trackFn();
                            } catch (e) {
                                console.error(e)
                            }
                        });
                    });
                }
            });
        };

        window.addEventListener('DOMContentLoaded', () => {
            // if possible, admin can set attributes for some dom elements in the low-code page builder editor, the code below detects the tracking config.
            try {
                autoDetectToTrack();
            } catch (e) {
                console.error(e);
            }

            // for some situations, we have to hard code to track some events.
            try {
                /*
                   compare button click event
                 */
                document.querySelectorAll(".compare-bar .compare-btn").forEach(btnEl => {
                    btnEl.addEventListener('click', () => {
                        const eventName = 'Click_compare';
                        [
                            () => gtag('event', eventName),
                            () => fbq('trackCustom', eventName)
                        ].forEach(trackFn => {
                            try {
                                trackFn();
                            } catch (e) {
                                console.error(e)
                            }
                        });
                    })
                })
                /*
                    page: /pages/testfahrt-mit-unserem-partner-in-berlin
                    a booking form generated by integration with third party js
                 */
                if (window.location.pathname.endsWith("/pages/testfahrt-mit-unserem-partner-in-berlin")) {
                    const selector = '.booqable-product-button button';
                    waitFor(() => !!document.querySelector(selector)).then(() => {
                        const targetElements = document.querySelectorAll(selector);
                        targetElements.forEach(el => {
                            el.addEventListener('click', () => {
                                const eventName = 'Testride_de';
                                [
                                    () => gtag('event', eventName),
                                    () => fbq('trackCustom', eventName)
                                ].forEach(trackFn => {
                                    try {
                                        trackFn();
                                    } catch (e) {
                                        console.error(e)
                                    }
                                });
                            });
                        });
                    });
                }
            } catch (e) {
                console.error(e);
            }
        });
    })();
</script>